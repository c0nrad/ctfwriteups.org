import * as i0 from '@angular/core';
import { NgModule } from '@angular/core';
import * as i1 from '@angular/router';
import { NavigationStart, NavigationError, NavigationEnd, NavigationCancel, RouterModule } from '@angular/router';
import * as i2 from '@ngx-loading-bar/core';
import { LoadingBarModule } from '@ngx-loading-bar/core';

class LoadingBarRouterModule {
    constructor(router, loader) {
        const ref = loader.useRef('router');
        router.events.subscribe((event) => {
            const navState = this.getCurrentNavigationState(router);
            if (navState && navState.ignoreLoadingBar) {
                return;
            }
            if (event instanceof NavigationStart) {
                ref.start();
            }
            if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {
                ref.complete();
            }
        });
    }
    getCurrentNavigationState(router) {
        // `getCurrentNavigation` only available in angular `7.2`
        const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();
        if (currentNavigation && currentNavigation.extras) {
            return currentNavigation.extras.state;
        }
        return {};
    }
}
LoadingBarRouterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: LoadingBarRouterModule, deps: [{ token: i1.Router }, { token: i2.LoadingBarService }], target: i0.ɵɵFactoryTarget.NgModule });
LoadingBarRouterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: LoadingBarRouterModule, imports: [RouterModule, LoadingBarModule], exports: [RouterModule, LoadingBarModule] });
LoadingBarRouterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: LoadingBarRouterModule, imports: [[RouterModule, LoadingBarModule], RouterModule, LoadingBarModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: LoadingBarRouterModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [RouterModule, LoadingBarModule],
                    exports: [RouterModule, LoadingBarModule],
                }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.LoadingBarService }]; } });

/**
 * Generated bundle index. Do not edit.
 */

export { LoadingBarRouterModule };
//# sourceMappingURL=ngx-loading-bar-router.mjs.map
