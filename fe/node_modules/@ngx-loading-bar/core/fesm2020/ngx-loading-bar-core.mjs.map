{"version":3,"file":"ngx-loading-bar-core.mjs","sources":["../../../../packages/core/src/loading-bar.state.ts","../../../../packages/core/src/loading-bar.config.ts","../../../../packages/core/src/loading-bar.service.ts","../../../../packages/core/src/loading-bar.component.ts","../../../../packages/core/src/core.module.ts","../../../../packages/core/src/ngx-loading-bar-core.ts"],"sourcesContent":["import { Subject, timer, of, Observable } from 'rxjs';\nimport { map, switchMap, take, tap, startWith, shareReplay } from 'rxjs/operators';\nimport { LoadingBarConfig } from './loading-bar.config';\n\ninterface ILoadingBarState {\n  action: 'start' | 'complete' | 'set' | 'stop' | 'increment';\n  value: number;\n  initialValue: number;\n}\n\nexport class LoadingBarState {\n  private state: ILoadingBarState = {\n    action: null,\n    value: 0,\n    initialValue: 0,\n  };\n  private requests = null;\n  private disabled = false;\n  private readonly stream$ = new Subject<ILoadingBarState>();\n  private _value$: Observable<number> | null = null;\n\n  constructor(private config: LoadingBarConfig = {}) {\n    this.config = {\n      latencyThreshold: 0,\n      ...config,\n    };\n  }\n\n  get value$() {\n    if (this._value$) {\n      return this._value$;\n    }\n\n    return (this._value$ = this.stream$.pipe(\n      startWith(this.state),\n      switchMap((s) => this.timer$(s)),\n      shareReplay(),\n      map((s) => s.value),\n    ));\n  }\n\n  start(initialValue = 2) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.next({ action: 'start', initialValue });\n  }\n\n  stop() {\n    this.next({ action: 'stop' });\n  }\n\n  complete() {\n    this.next({ action: 'complete' });\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  set(value: number) {\n    this.next({ action: 'set', value });\n  }\n\n  increment(value = 0) {\n    this.next({ action: 'increment', value });\n  }\n\n  private next(state: Partial<ILoadingBarState>, emitEvent = true) {\n    switch (state.action) {\n      case 'start':\n        this.requests = (this.requests || 0) + 1;\n        break;\n      case 'complete':\n        this.requests = (this.requests || 1) - 1;\n        if (this.requests > 0) {\n          return;\n        }\n        break;\n      case 'stop':\n        this.requests = 0;\n        break;\n      case 'increment':\n        state.value = this._increment(state.value);\n        break;\n    }\n\n    this.state = { ...this.state, action: null, ...state };\n    if (emitEvent) {\n      this.stream$.next(this.state);\n    }\n  }\n\n  private timer$ = (s: ILoadingBarState) => {\n    let state$: Observable<Partial<ILoadingBarState>> = of(s);\n    switch (s.action) {\n      case 'start':\n      case 'increment':\n      case 'set': {\n        if (s.action === 'start' && this.config.latencyThreshold === 0 && s.value === 0) {\n          s.value = s.initialValue;\n        }\n\n        if (this.requests > 0) {\n          state$ = timer(this.config.latencyThreshold, 250).pipe(\n            map((t) => ({ ...s, value: t === 0 ? this.state.value || s.initialValue : this._increment() })),\n          );\n        }\n        break;\n      }\n      case 'complete':\n      case 'stop': {\n        // Attempt to aggregate any start/complete calls within 500ms:\n        state$ =\n          s.value === 0\n            ? of({ ...s })\n            : timer(0, 500).pipe(\n                take(2),\n                map((t) => ({ value: t === 0 ? 100 : 0 })),\n              );\n        break;\n      }\n    }\n\n    return state$.pipe(\n      map((next) => <ILoadingBarState>{ ...next, action: 'set' }),\n      tap((next) => this.next(next, false)),\n    );\n  };\n\n  private _increment(rnd = 0) {\n    const stat = this.state.value;\n    if (stat >= 99) {\n      rnd = 0;\n    }\n\n    if (rnd === 0) {\n      if (stat >= 0 && stat < 25) {\n        // Start out between 3 - 6% increments\n        rnd = Math.random() * (5 - 3 + 1) + 3;\n      } else if (stat >= 25 && stat < 65) {\n        // increment between 0 - 3%\n        rnd = Math.random() * 3;\n      } else if (stat >= 65 && stat < 90) {\n        // increment between 0 - 2%\n        rnd = Math.random() * 2;\n      } else if (stat >= 90 && stat < 99) {\n        // finally, increment it .5 %\n        rnd = 0.5;\n      } else {\n        // after 99%, don't increment:\n        rnd = 0;\n      }\n    }\n\n    return rnd + stat;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface LoadingBarConfig {\n  latencyThreshold?: number;\n}\n\nexport const LOADING_BAR_CONFIG = new InjectionToken<LoadingBarConfig>('LOADING_BAR_CONFIG');\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport { PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { LoadingBarState } from './loading-bar.state';\nimport { Subject, combineLatest, Observable, OperatorFunction } from 'rxjs';\nimport { switchMap, map, startWith } from 'rxjs/operators';\nimport { LOADING_BAR_CONFIG, LoadingBarConfig } from './loading-bar.config';\n\n@Injectable({ providedIn: 'root' })\nexport class LoadingBarService {\n  private readonly refs: { [id: string]: LoadingBarState } = {};\n  private readonly streams$ = new Subject<void>();\n  readonly value$ = this.streams$.pipe(\n    startWith(null),\n    switchMap(() => combineLatest(Object.keys(this.refs).map((s) => this.refs[s].value$))),\n    runInZone(this.zone),\n    map((v) => Math.max(0, ...v)),\n  );\n\n  /** @deprecated use `value$` instead. */\n  get progress$() {\n    return this.value$;\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() @Inject(LOADING_BAR_CONFIG) private config: LoadingBarConfig = {},\n    @Optional() private zone?: NgZone,\n  ) {}\n\n  /** @deprecated use `useRef` instead. */\n  start(initialValue = 2) {\n    this.useRef().start(initialValue);\n  }\n\n  /** @deprecated use `useRef` instead. */\n  set(value: number) {\n    this.useRef().set(value);\n  }\n\n  /** @deprecated use `useRef` instead. */\n  increment(value?: number) {\n    this.useRef().increment(value);\n  }\n\n  /** @deprecated use `useRef` instead. */\n  complete() {\n    this.useRef().complete();\n  }\n\n  /** @deprecated use `useRef` instead. */\n  stop() {\n    this.useRef().stop();\n  }\n\n  useRef(id: string = 'default'): LoadingBarState {\n    if (!this.refs[id]) {\n      this.refs[id] = new LoadingBarState(this.config);\n      this.streams$.next();\n\n      if (!isPlatformBrowser(this.platformId)) {\n        this.refs[id].disable();\n      }\n    }\n\n    return this.refs[id];\n  }\n}\n\n// https://stackoverflow.com/a/57452361/1406096\nexport function runInZone<T>(zone: NgZone): OperatorFunction<T, T> {\n  if (!zone) {\n    return (source) => source;\n  }\n\n  return (source) =>\n    new Observable((observer) =>\n      source.subscribe(\n        (value: T) => zone.run(() => observer.next(value)),\n        (e: any) => zone.run(() => observer.error(e)),\n        () => zone.run(() => observer.complete()),\n      ),\n    );\n}\n","import { Component, Input, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { LoadingBarService } from './loading-bar.service';\n\n@Component({\n  selector: 'ngx-loading-bar',\n  template: `\n    <ng-container *ngIf=\"value != null ? value : (value$ | async) as progress\">\n      <div *ngIf=\"includeSpinner\" class=\"ngx-spinner\">\n        <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"ngx-spinner-icon\"></div>\n      </div>\n      <div\n        *ngIf=\"includeBar\"\n        class=\"ngx-bar\"\n        [style.background]=\"color\"\n        [style.height]=\"height\"\n        [style.width]=\"progress + '%'\"\n      ></div>\n    </ng-container>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.Emulated,\n  styleUrls: ['./loading-bar.component.scss'],\n  host: {\n    '[attr.fixed]': 'fixed',\n    '[style.color]': 'color',\n  },\n})\nexport class LoadingBarComponent {\n  @Input() includeSpinner = true;\n  @Input() includeBar = true;\n  @Input() fixed = true;\n  @Input() color = '#29d';\n  @Input() value: number;\n  @Input() ref: string;\n  @Input() height: string;\n  @Input() diameter: string;\n\n  get value$() {\n    return this.ref ? this.loader.useRef(this.ref).value$ : this.loader.value$;\n  }\n\n  constructor(private loader: LoadingBarService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingBarComponent } from './loading-bar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LoadingBarComponent],\n  exports: [LoadingBarComponent],\n})\nexport class LoadingBarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}