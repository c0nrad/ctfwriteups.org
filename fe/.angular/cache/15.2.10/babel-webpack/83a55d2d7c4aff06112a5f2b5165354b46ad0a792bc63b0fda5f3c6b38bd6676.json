{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nexport class UserService {\n  constructor(http, config) {\n    this.http = http;\n    this.config = config;\n  }\n  getMe() {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/users/me`);\n  }\n  logout() {\n    return this.http.post(`${this.config.getOrigin()}/api/v1/users/me/logout`, {});\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;;AAmBA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAkB;EAEtEC,KAAK;IACH,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,kBAAkB,CAAC;EAC1E;EAEAC,MAAM;IACJ,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,MAAM,CAACG,SAAS,EAAE,yBAAyB,EAAE,EAAE,CAAC;EACtF;EAAC;qBATUN,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAS,SAAXT,WAAW;IAAAU,YAFV;EAAM","names":["UserService","constructor","http","config","getMe","get","getOrigin","logout","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/services/user.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ConfigService } from \"./config.service\";\n\nexport interface User {\n  id: string;\n  ts: number;\n\n  username: string;\n  email: string;\n\n  isAdmin: boolean;\n  isModerator: boolean;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  constructor(private http: HttpClient, private config: ConfigService) {}\n\n  getMe(): Observable<User> {\n    return this.http.get<User>(`${this.config.getOrigin()}/api/v1/users/me`);\n  }\n\n  logout(): Observable<void> {\n    return this.http.post<void>(`${this.config.getOrigin()}/api/v1/users/me/logout`, {});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}