{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet CtfEditComponent = class CtfEditComponent {\n  constructor(route, ctfService, location, userService) {\n    this.route = route;\n    this.ctfService = ctfService;\n    this.location = location;\n    this.userService = userService;\n    this.ctf = {};\n    this.me = {};\n  }\n  ngOnInit() {\n    this.userService.getMe().subscribe(me => {\n      this.me = me;\n      this.route.params.subscribe(params => {\n        if (params[\"id\"]) {\n          this.ctfService.getCTF(params[\"id\"]).subscribe(ctf => {\n            this.ctf = ctf;\n          });\n        } else {\n          this.ctf.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n  save() {\n    if (this.ctf.id) {\n      this.ctfService.updateCTF(this.ctf).subscribe(() => {\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    } else {\n      this.ctfService.newCTF(this.ctf).subscribe(ctf => {\n        this.ctf = ctf;\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    }\n  }\n  removeCategory(category) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories = this.ctf.categories.filter(t => t !== category);\n  }\n  addCategory(category) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories.push(category);\n    this.newCategory = \"\";\n  }\n};\nCtfEditComponent = __decorate([Component({\n  selector: \"app-ctf-edit\",\n  template: `<div class=\"container\" style=\"padding-top: 65px\">\n    <div class=\"mb-3\">\n      <label class=\"form-label\">CTF Name</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"ctf.name\" />\n    </div>\n\n    <input type=\"text\" class=\"form-control\" placeholder=\"Categories\" [(ngModel)]=\"newCategory\" />\n    <button class=\"btn btn-secondary\" (click)=\"addCategory(newCategory)\">Add Category</button>\n\n    <div *ngFor=\"let category of writeup.categories\" class=\"badge bg-secondary\">{{ category }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeCategory(category)\"></button></div>\n\n    <div *ngFor=\"let category of ctf.categories\"><div class=\" {{ category }}</div>\n\n    <button (click)=\"save()\" class=\"btn btn-primary\">Save</button>\n\n    {{ ctf }}\n  </div>`,\n  styles: []\n})], CtfEditComponent);\nexport { CtfEditComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AA0BlC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAoBC,KAAqB,EAAUC,UAAsB,EAAUC,QAAkB,EAAUC,WAAwB;IAAnH,UAAK,GAALH,KAAK;IAA0B,eAAU,GAAVC,UAAU;IAAsB,aAAQ,GAARC,QAAQ;IAAoB,gBAAW,GAAXC,WAAW;IAH1H,QAAG,GAAQ,EAAS;IACpB,OAAE,GAAS,EAAU;EAEqH;EAE1IC,QAAQ;IACN,IAAI,CAACD,WAAW,CAACE,KAAK,EAAE,CAACC,SAAS,CAAEC,EAAE,IAAI;MACxC,IAAI,CAACA,EAAE,GAAGA,EAAE;MAEZ,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACF,SAAS,CAAEE,MAAM,IAAI;QACrC,IAAIA,MAAM,CAAC,IAAI,CAAC,EAAE;UAChB,IAAI,CAACP,UAAU,CAACQ,MAAM,CAACD,MAAM,CAAC,IAAI,CAAC,CAAC,CAACF,SAAS,CAAEI,GAAG,IAAI;YACrD,IAAI,CAACA,GAAG,GAAGA,GAAG;UAChB,CAAC,CAAC;SACH,MAAM;UACL,IAAI,CAACA,GAAG,CAACC,WAAW,GAAG,IAAI,CAACJ,EAAE,CAACK,EAAE;;MAErC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,CAACX,QAAQ,CAACY,EAAE,CAAC,WAAW,CAAC;EAC/B;EAEAC,IAAI;IACF,IAAI,IAAI,CAACL,GAAG,CAACE,EAAE,EAAE;MACf,IAAI,CAACX,UAAU,CAACe,SAAS,CAAC,IAAI,CAACN,GAAG,CAAC,CAACJ,SAAS,CAAC,MAAK;QACjD,IAAI,CAACJ,QAAQ,CAACY,EAAE,CAAC,SAAS,IAAI,CAACJ,GAAG,CAACE,EAAE,OAAO,CAAC;MAC/C,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACX,UAAU,CAACY,MAAM,CAAC,IAAI,CAACH,GAAG,CAAC,CAACJ,SAAS,CAAEI,GAAG,IAAI;QACjD,IAAI,CAACA,GAAG,GAAGA,GAAG;QACd,IAAI,CAACR,QAAQ,CAACY,EAAE,CAAC,SAAS,IAAI,CAACJ,GAAG,CAACE,EAAE,OAAO,CAAC;MAC/C,CAAC,CAAC;;EAEN;EAEAK,cAAc,CAACC,QAAgB;IAC7B,IAAI,CAAC,IAAI,CAACR,GAAG,CAACS,UAAU,EAAE;MACxB,IAAI,CAACT,GAAG,CAACS,UAAU,GAAG,EAAE;;IAE1B,IAAI,CAACT,GAAG,CAACS,UAAU,GAAG,IAAI,CAACT,GAAG,CAACS,UAAU,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKH,QAAQ,CAAC;EACzE;EAEAI,WAAW,CAACJ,QAAgB;IAC1B,IAAI,CAAC,IAAI,CAACR,GAAG,CAACS,UAAU,EAAE;MACxB,IAAI,CAACT,GAAG,CAACS,UAAU,GAAG,EAAE;;IAE1B,IAAI,CAACT,GAAG,CAACS,UAAU,CAACI,IAAI,CAACL,QAAQ,CAAC;IAClC,IAAI,CAACM,WAAW,GAAG,EAAE;EACvB;CACD;AArDY1B,gBAAgB,eArB5BD,SAAS,CAAC;EACT4B,QAAQ,EAAE,cAAc;EACxBC,QAAQ,EAAE;;;;;;;;;;;;;;;;SAgBH;EACPC,MAAM,EAAE;CACT,CAAC,GACW7B,gBAAgB,CAqD5B;SArDYA,gBAAgB","names":["Component","CtfEditComponent","constructor","route","ctfService","location","userService","ngOnInit","getMe","subscribe","me","params","getCTF","ctf","submitterID","id","newCTF","go","save","updateCTF","removeCategory","category","categories","filter","t","addCategory","push","newCategory","selector","template","styles"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/ctf-edit/ctf-edit.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { CTF, CTFService } from \"src/app/services/ctf.service\";\nimport { User, UserService } from \"src/app/services/user.service\";\n\n@Component({\n  selector: \"app-ctf-edit\",\n  template: `<div class=\"container\" style=\"padding-top: 65px\">\n    <div class=\"mb-3\">\n      <label class=\"form-label\">CTF Name</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"ctf.name\" />\n    </div>\n\n    <input type=\"text\" class=\"form-control\" placeholder=\"Categories\" [(ngModel)]=\"newCategory\" />\n    <button class=\"btn btn-secondary\" (click)=\"addCategory(newCategory)\">Add Category</button>\n\n    <div *ngFor=\"let category of writeup.categories\" class=\"badge bg-secondary\">{{ category }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeCategory(category)\"></button></div>\n\n    <div *ngFor=\"let category of ctf.categories\"><div class=\" {{ category }}</div>\n\n    <button (click)=\"save()\" class=\"btn btn-primary\">Save</button>\n\n    {{ ctf }}\n  </div>`,\n  styles: [],\n})\nexport class CtfEditComponent {\n  ctf: CTF = {} as CTF;\n  me: User = {} as User;\n\n  constructor(private route: ActivatedRoute, private ctfService: CTFService, private location: Location, private userService: UserService) {}\n\n  ngOnInit() {\n    this.userService.getMe().subscribe((me) => {\n      this.me = me;\n\n      this.route.params.subscribe((params) => {\n        if (params[\"id\"]) {\n          this.ctfService.getCTF(params[\"id\"]).subscribe((ctf) => {\n            this.ctf = ctf;\n          });\n        } else {\n          this.ctf.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n\n  save() {\n    if (this.ctf.id) {\n      this.ctfService.updateCTF(this.ctf).subscribe(() => {\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    } else {\n      this.ctfService.newCTF(this.ctf).subscribe((ctf) => {\n        this.ctf = ctf;\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    }\n  }\n\n  removeCategory(category: string) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories = this.ctf.categories.filter((t) => t !== category);\n  }\n\n  addCategory(category: string) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories.push(category);\n    this.newCategory = \"\";\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}