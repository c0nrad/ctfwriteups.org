{"ast":null,"code":"import * as i1 from '@ngx-loading-bar/core';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HttpContextToken, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { tap, finalize } from 'rxjs/operators';\nconst NGX_LOADING_BAR_IGNORED = new HttpContextToken(() => false);\nclass LoadingBarInterceptor {\n  constructor(loader) {\n    this.loader = loader;\n  }\n  intercept(req, next) {\n    // https://github.com/angular/angular/issues/18155\n    if (req.headers.has('ignoreLoadingBar')) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(`Using http headers ('ignoreLoadingBar') to ignore loading bar is deprecated. Use HttpContext instead: 'context: new HttpContext().set(NGX_LOADING_BAR_IGNORED, true)'`);\n      }\n      return next.handle(req.clone({\n        headers: req.headers.delete('ignoreLoadingBar')\n      }));\n    }\n    if (req.context.get(NGX_LOADING_BAR_IGNORED) === true) {\n      return next.handle(req);\n    }\n    let started = false;\n    const ref = this.loader.useRef('http');\n    return next.handle(req).pipe(tap(() => {\n      if (!started) {\n        ref.start();\n        started = true;\n      }\n    }), finalize(() => started && ref.complete()));\n  }\n}\nLoadingBarInterceptor.ɵfac = function LoadingBarInterceptor_Factory(t) {\n  return new (t || LoadingBarInterceptor)(i0.ɵɵinject(i1.LoadingBarService));\n};\nLoadingBarInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LoadingBarInterceptor,\n  factory: LoadingBarInterceptor.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingBarInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.LoadingBarService\n    }];\n  }, null);\n})();\nclass LoadingBarHttpClientModule {}\nLoadingBarHttpClientModule.ɵfac = function LoadingBarHttpClientModule_Factory(t) {\n  return new (t || LoadingBarHttpClientModule)();\n};\nLoadingBarHttpClientModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoadingBarHttpClientModule\n});\nLoadingBarHttpClientModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoadingBarInterceptor,\n    multi: true\n  }],\n  imports: [[HttpClientModule, LoadingBarModule], HttpClientModule, LoadingBarModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingBarHttpClientModule, [{\n    type: NgModule,\n    args: [{\n      imports: [HttpClientModule, LoadingBarModule],\n      exports: [HttpClientModule, LoadingBarModule],\n      providers: [{\n        provide: HTTP_INTERCEPTORS,\n        useClass: LoadingBarInterceptor,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoadingBarHttpClientModule, NGX_LOADING_BAR_IGNORED };","map":{"version":3,"names":["i1","LoadingBarModule","i0","Injectable","NgModule","HttpContextToken","HttpClientModule","HTTP_INTERCEPTORS","tap","finalize","NGX_LOADING_BAR_IGNORED","LoadingBarInterceptor","constructor","loader","intercept","req","next","headers","has","ngDevMode","console","warn","handle","clone","delete","context","get","started","ref","useRef","pipe","start","complete","ɵfac","LoadingBarService","ɵprov","type","LoadingBarHttpClientModule","ɵmod","ɵinj","provide","useClass","multi","args","imports","exports","providers"],"sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/node_modules/@ngx-loading-bar/http-client/fesm2020/ngx-loading-bar-http-client.mjs"],"sourcesContent":["import * as i1 from '@ngx-loading-bar/core';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HttpContextToken, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { tap, finalize } from 'rxjs/operators';\n\nconst NGX_LOADING_BAR_IGNORED = new HttpContextToken(() => false);\nclass LoadingBarInterceptor {\n    constructor(loader) {\n        this.loader = loader;\n    }\n    intercept(req, next) {\n        // https://github.com/angular/angular/issues/18155\n        if (req.headers.has('ignoreLoadingBar')) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                console.warn(`Using http headers ('ignoreLoadingBar') to ignore loading bar is deprecated. Use HttpContext instead: 'context: new HttpContext().set(NGX_LOADING_BAR_IGNORED, true)'`);\n            }\n            return next.handle(req.clone({ headers: req.headers.delete('ignoreLoadingBar') }));\n        }\n        if (req.context.get(NGX_LOADING_BAR_IGNORED) === true) {\n            return next.handle(req);\n        }\n        let started = false;\n        const ref = this.loader.useRef('http');\n        return next.handle(req).pipe(tap(() => {\n            if (!started) {\n                ref.start();\n                started = true;\n            }\n        }), finalize(() => started && ref.complete()));\n    }\n}\nLoadingBarInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarInterceptor, deps: [{ token: i1.LoadingBarService }], target: i0.ɵɵFactoryTarget.Injectable });\nLoadingBarInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.LoadingBarService }]; } });\n\nclass LoadingBarHttpClientModule {\n}\nLoadingBarHttpClientModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarHttpClientModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoadingBarHttpClientModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarHttpClientModule, imports: [HttpClientModule, LoadingBarModule], exports: [HttpClientModule, LoadingBarModule] });\nLoadingBarHttpClientModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarHttpClientModule, providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: LoadingBarInterceptor,\n            multi: true,\n        },\n    ], imports: [[HttpClientModule, LoadingBarModule], HttpClientModule, LoadingBarModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarHttpClientModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [HttpClientModule, LoadingBarModule],\n                    exports: [HttpClientModule, LoadingBarModule],\n                    providers: [\n                        {\n                            provide: HTTP_INTERCEPTORS,\n                            useClass: LoadingBarInterceptor,\n                            multi: true,\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoadingBarHttpClientModule, NGX_LOADING_BAR_IGNORED };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}