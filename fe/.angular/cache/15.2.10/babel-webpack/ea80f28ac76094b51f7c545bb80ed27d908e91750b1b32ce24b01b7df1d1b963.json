{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet WriteupEditComponent = class WriteupEditComponent {\n  constructor(route, writeupService, location, userService) {\n    this.route = route;\n    this.writeupService = writeupService;\n    this.location = location;\n    this.userService = userService;\n    this.writeup = {};\n    this.newTag = \"\";\n    this.me = {};\n  }\n  ngOnInit() {\n    this.userService.getMe().subscribe(me => {\n      this.me = me;\n      this.route.params.subscribe(params => {\n        if (params[\"id\"]) {\n          this.writeupService.getWriteup(params[\"id\"]).subscribe(writeup => {\n            this.writeup = writeup;\n          });\n        } else {\n          this.writeup.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n  removeTag(tag) {\n    this.writeup.tags = this.writeup.tags.filter(t => t !== tag);\n  }\n  save() {\n    if (this.writeup.id) {\n      this.writeupService.updateWriteup(this.writeup).subscribe(() => {\n        this.location.go(`/writeup/${this.writeup.id}`);\n      });\n    } else {\n      this.writeupService.newWriteup(this.writeup).subscribe(() => {\n        this.location.go(`/writeup/${this.writeup.id}`);\n      });\n    }\n  }\n};\nWriteupEditComponent = __decorate([Component({\n  selector: \"app-writeup-edit\",\n  template: `\n    <div class=\"container\" style=\"padding-top:65px\">\n      <!-- <h3>{{ writeup.title }}</h3> -->\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Title</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Title\" [(ngModel)]=\"writeup.title\" />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">URL</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"URL\" [(ngModel)]=\"writeup.url\" />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">CTF Name</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"writeup.ctfName\" />\n        <div class=\"form-text\">Try to use an existing name, if it doesn't exist it will be created.</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Challenge Name</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"writeup.challengeName\" />\n        <div class=\"form-text\">Try to use an existing name, if it doesn't exist it will be created.</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Challenge Category</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Challenge Category\" [(ngModel)]=\"writeup.challengeCategory\" />\n        <div class=\"form-text\">\"Pwn\", \"Web\", \"Crypto\", etc.</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Difficulty</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Difficulty\" [(ngModel)]=\"writeup.difficulty\" />\n        <div class=\"form-text\">Optional, it helps others gauge difficulty. \"Easy\", \"Medium\", \"Hard\". Feel free to leave empty if unsure.</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Tags</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Tags\" [(ngModel)]=\"newTag\" />\n        <button class=\"btn btn-secondary\" (click)=\"writeup.tags.push(newTag)\">Add Tag</button>\n\n        <div *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeTag(tag)\"></button></div>\n\n        <div class=\"form-text\">Tags are used for searching. \"XSS\", \"nodejs\", \"ROP\", etc.</div>\n      </div>\n\n      <button class=\"btn btn-primary\" (click)=\"save()\"\">Save</button>\n    </div>\n  `,\n  styles: []\n})], WriteupEditComponent);\nexport { WriteupEditComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AA4DlC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAM/BC,YAAoBC,KAAqB,EAAUC,cAA8B,EAAUC,QAAkB,EAAUC,WAAwB;IAA3H,UAAK,GAALH,KAAK;IAA0B,mBAAc,GAAdC,cAAc;IAA0B,aAAQ,GAARC,QAAQ;IAAoB,gBAAW,GAAXC,WAAW;IALlI,YAAO,GAAY,EAAa;IAChC,WAAM,GAAG,EAAE;IAEX,OAAE,GAAS,EAAU;EAE6H;EAElJC,QAAQ;IACN,IAAI,CAACD,WAAW,CAACE,KAAK,EAAE,CAACC,SAAS,CAAEC,EAAE,IAAI;MACxC,IAAI,CAACA,EAAE,GAAGA,EAAE;MAEZ,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACF,SAAS,CAAEE,MAAM,IAAI;QACrC,IAAIA,MAAM,CAAC,IAAI,CAAC,EAAE;UAChB,IAAI,CAACP,cAAc,CAACQ,UAAU,CAACD,MAAM,CAAC,IAAI,CAAC,CAAC,CAACF,SAAS,CAAEI,OAAO,IAAI;YACjE,IAAI,CAACA,OAAO,GAAGA,OAAO;UACxB,CAAC,CAAC;SACH,MAAM;UACL,IAAI,CAACA,OAAO,CAACC,WAAW,GAAG,IAAI,CAACJ,EAAE,CAACK,EAAE;;MAEzC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,SAAS,CAACC,GAAW;IACnB,IAAI,CAACJ,OAAO,CAACK,IAAI,GAAG,IAAI,CAACL,OAAO,CAACK,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKH,GAAG,CAAC;EAChE;EAEAI,IAAI;IACF,IAAI,IAAI,CAACR,OAAO,CAACE,EAAE,EAAE;MACnB,IAAI,CAACX,cAAc,CAACkB,aAAa,CAAC,IAAI,CAACT,OAAO,CAAC,CAACJ,SAAS,CAAC,MAAK;QAC7D,IAAI,CAACJ,QAAQ,CAACkB,EAAE,CAAC,YAAY,IAAI,CAACV,OAAO,CAACE,EAAE,EAAE,CAAC;MACjD,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACX,cAAc,CAACoB,UAAU,CAAC,IAAI,CAACX,OAAO,CAAC,CAACJ,SAAS,CAAC,MAAK;QAC1D,IAAI,CAACJ,QAAQ,CAACkB,EAAE,CAAC,YAAY,IAAI,CAACV,OAAO,CAACE,EAAE,EAAE,CAAC;MACjD,CAAC,CAAC;;EAEN;CACD;AAvCYd,oBAAoB,eAvDhCD,SAAS,CAAC;EACTyB,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkDT;EACDC,MAAM,EAAE;CACT,CAAC,GACW1B,oBAAoB,CAuChC;SAvCYA,oBAAoB","names":["Component","WriteupEditComponent","constructor","route","writeupService","location","userService","ngOnInit","getMe","subscribe","me","params","getWriteup","writeup","submitterID","id","removeTag","tag","tags","filter","t","save","updateWriteup","go","newWriteup","selector","template","styles"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/writeup-edit/writeup-edit.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User, UserService } from \"src/app/services/user.service\";\nimport { Writeup, WriteupService } from \"src/app/services/writeup.service\";\n\n@Component({\n  selector: \"app-writeup-edit\",\n  template: `\n    <div class=\"container\" style=\"padding-top:65px\">\n      <!-- <h3>{{ writeup.title }}</h3> -->\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Title</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Title\" [(ngModel)]=\"writeup.title\" />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">URL</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"URL\" [(ngModel)]=\"writeup.url\" />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">CTF Name</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"writeup.ctfName\" />\n        <div class=\"form-text\">Try to use an existing name, if it doesn't exist it will be created.</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Challenge Name</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"writeup.challengeName\" />\n        <div class=\"form-text\">Try to use an existing name, if it doesn't exist it will be created.</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Challenge Category</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Challenge Category\" [(ngModel)]=\"writeup.challengeCategory\" />\n        <div class=\"form-text\">\"Pwn\", \"Web\", \"Crypto\", etc.</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Difficulty</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Difficulty\" [(ngModel)]=\"writeup.difficulty\" />\n        <div class=\"form-text\">Optional, it helps others gauge difficulty. \"Easy\", \"Medium\", \"Hard\". Feel free to leave empty if unsure.</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Tags</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Tags\" [(ngModel)]=\"newTag\" />\n        <button class=\"btn btn-secondary\" (click)=\"writeup.tags.push(newTag)\">Add Tag</button>\n\n        <div *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeTag(tag)\"></button></div>\n\n        <div class=\"form-text\">Tags are used for searching. \"XSS\", \"nodejs\", \"ROP\", etc.</div>\n      </div>\n\n      <button class=\"btn btn-primary\" (click)=\"save()\"\">Save</button>\n    </div>\n  `,\n  styles: [],\n})\nexport class WriteupEditComponent {\n  writeup: Writeup = {} as Writeup;\n  newTag = \"\";\n\n  me: User = {} as User;\n\n  constructor(private route: ActivatedRoute, private writeupService: WriteupService, private location: Location, private userService: UserService) {}\n\n  ngOnInit() {\n    this.userService.getMe().subscribe((me) => {\n      this.me = me;\n\n      this.route.params.subscribe((params) => {\n        if (params[\"id\"]) {\n          this.writeupService.getWriteup(params[\"id\"]).subscribe((writeup) => {\n            this.writeup = writeup;\n          });\n        } else {\n          this.writeup.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n\n  removeTag(tag: string) {\n    this.writeup.tags = this.writeup.tags.filter((t) => t !== tag);\n  }\n\n  save() {\n    if (this.writeup.id) {\n      this.writeupService.updateWriteup(this.writeup).subscribe(() => {\n        this.location.go(`/writeup/${this.writeup.id}`);\n      });\n    } else {\n      this.writeupService.newWriteup(this.writeup).subscribe(() => {\n        this.location.go(`/writeup/${this.writeup.id}`);\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}