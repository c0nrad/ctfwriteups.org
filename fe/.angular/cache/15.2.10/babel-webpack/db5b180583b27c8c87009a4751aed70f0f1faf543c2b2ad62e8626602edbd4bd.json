{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConfigService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAssetsOrigin() {\n    if (this.getHost().indexOf(\"assets\") > -1) {\n      return this.getOrigin();\n    } else if (this.getHost().indexOf(\"ctfwriteups\") > -1) {\n      return \"https://assets.\" + this.getHost();\n    } else {\n      return this.getOrigin();\n    }\n  }\n  getHost() {\n    return window.location.host;\n  }\n  getOrigin() {\n    return window.location.origin;\n  }\n  getWSOrigin() {\n    if (environment.production) {\n      return this.getHost();\n    } else {\n      return \"localhost:8080\";\n    }\n  }\n  static #_ = this.ɵfac = function ConfigService_Factory(t) {\n    return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConfigService,\n    factory: ConfigService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,aAAa;EACxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,eAAe;IACb,IAAI,IAAI,CAACC,OAAO,EAAE,CAACC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;MACzC,OAAO,IAAI,CAACC,SAAS,EAAE;KACxB,MAAM,IAAI,IAAI,CAACF,OAAO,EAAE,CAACC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE;MACrD,OAAO,iBAAiB,GAAG,IAAI,CAACD,OAAO,EAAE;KAC1C,MAAM;MACL,OAAO,IAAI,CAACE,SAAS,EAAE;;EAE3B;EAEAF,OAAO;IACL,OAAOG,MAAM,CAACC,QAAQ,CAACC,IAAI;EAC7B;EAEAH,SAAS;IACP,OAAOC,MAAM,CAACC,QAAQ,CAACE,MAAM;EAC/B;EAEAC,WAAW;IACT,IAAIZ,WAAW,CAACa,UAAU,EAAE;MAC1B,OAAO,IAAI,CAACR,OAAO,EAAE;KACtB,MAAM;MACL,OAAO,gBAAgB;;EAE3B;EAAC;qBA3BUJ,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAa,SAAbb,aAAa;IAAAc,YAFZ;EAAM","names":["environment","ConfigService","constructor","http","getAssetsOrigin","getHost","indexOf","getOrigin","window","location","host","origin","getWSOrigin","production","factory","providedIn"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/services/config.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ConfigService {\n  constructor(private http: HttpClient) {}\n\n  getAssetsOrigin(): string {\n    if (this.getHost().indexOf(\"assets\") > -1) {\n      return this.getOrigin();\n    } else if (this.getHost().indexOf(\"ctfwriteups\") > -1) {\n      return \"https://assets.\" + this.getHost();\n    } else {\n      return this.getOrigin();\n    }\n  }\n\n  getHost(): string {\n    return window.location.host;\n  }\n\n  getOrigin(): string {\n    return window.location.origin;\n  }\n\n  getWSOrigin(): string {\n    if (environment.production) {\n      return this.getHost();\n    } else {\n      return \"localhost:8080\";\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}