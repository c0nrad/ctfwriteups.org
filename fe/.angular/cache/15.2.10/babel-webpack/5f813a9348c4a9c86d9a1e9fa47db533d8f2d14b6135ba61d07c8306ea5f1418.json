{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/newsletter.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UnsubscribeComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \"Unsubscribed!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UnsubscribeComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport let UnsubscribeComponent = /*#__PURE__*/(() => {\n  class UnsubscribeComponent {\n    constructor(newsletterService) {\n      this.newsletterService = newsletterService;\n      this.subscription = {};\n      this.isSubscribed = false;\n      this.errorMessage = \"\";\n    }\n    subscribe(subscription) {\n      this.newsletterService.unsubscribe(subscription.email).subscribe(subscription => {\n        this.isSubscribed = true;\n      }, err => {\n        // this.isSubscribed = true;\n        this.errorMessage = err.error;\n      });\n    }\n    static #_ = this.ɵfac = function UnsubscribeComponent_Factory(t) {\n      return new (t || UnsubscribeComponent)(i0.ɵɵdirectiveInject(i1.NewsletterService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UnsubscribeComponent,\n      selectors: [[\"app-unsubscribe\"]],\n      decls: 11,\n      vars: 3,\n      consts: [[1, \"container\", 2, \"padding-top\", \"65px\"], [1, \"mb-3\", \"input-group\"], [\"type\", \"email\", \"placeholder\", \"Email Address\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"text-success\", 4, \"ngIf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-success\"], [1, \"text-danger\"]],\n      template: function UnsubscribeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n          i0.ɵɵtext(2, \"Unsubscribe\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4, \"Feel free to email c0nrad@c0nrad.io if there are any complaints.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 1)(6, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function UnsubscribeComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.subscription.email = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function UnsubscribeComponent_Template_button_click_7_listener() {\n            return ctx.subscribe(ctx.subscription);\n          });\n          i0.ɵɵtext(8, \"Unsubscribe\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(9, UnsubscribeComponent_div_9_Template, 2, 0, \"div\", 4);\n          i0.ɵɵtemplate(10, UnsubscribeComponent_div_10_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.subscription.email);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isSubscribed);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage.length != 0);\n        }\n      },\n      dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      encapsulation: 2\n    });\n  }\n  return UnsubscribeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}