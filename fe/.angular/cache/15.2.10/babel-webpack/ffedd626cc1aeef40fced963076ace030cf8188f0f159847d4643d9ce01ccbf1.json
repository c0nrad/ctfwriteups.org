{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet TopComponent = class TopComponent {\n  constructor(writeupService, location, voteService, commentService) {\n    this.writeupService = writeupService;\n    this.location = location;\n    this.voteService = voteService;\n    this.commentService = commentService;\n    this.me = {};\n    this.writeups = [];\n    this.votes = [];\n  }\n  ngOnInit() {\n    this.writeupService.getWriteups().subscribe(writeups => {\n      this.writeups = writeups;\n      this.writeups.forEach(writeup => {\n        writeup.newComment = {};\n        writeup.newComment.body = \"\";\n        writeup.isExpanded = false;\n        writeup.comments = writeup.comments || [];\n      });\n    });\n    this.voteService.getVotes().subscribe(votes => {\n      this.votes = votes || [];\n    });\n  }\n  hasVoted(writeup) {\n    if (!this.votes) {}\n    return !!this.votes.find(v => v.writeupID === writeup.id);\n  }\n  getVote(writeup) {\n    return this.votes.find(v => v.writeupID === writeup.id);\n  }\n  addVote(writeup) {\n    const vote = {\n      writeupID: writeup.id,\n      userID: this.me.id\n    };\n    this.voteService.newVote(vote).subscribe(v => {\n      this.votes.push(v);\n      writeup.voteCount++;\n    });\n  }\n  removeVote(vote, writeup) {\n    console.log(\"remove vote\", vote);\n    this.voteService.deleteVote(vote).subscribe(_ => {\n      this.votes = this.votes.filter(v => vote.id !== v.id);\n      writeup.voteCount--;\n    });\n  }\n  getDomain(u) {\n    return new URL(u).hostname;\n  }\n  sortedWriteups() {\n    return this.writeups.sort((a, b) => b.voteCount - a.voteCount);\n  }\n  expandWriteup(writeup) {\n    writeup.isExpanded = true;\n    this.commentService.getCommentsForWriteup(writeup.id).subscribe(comments => {\n      writeup.comments = comments;\n    });\n  }\n  addComment(writeup) {\n    writeup.newComment.writeupID = writeup.id;\n    writeup.newComment.userID = this.me.id;\n    this.commentService.newComment(writeup.newComment).subscribe(comment => {\n      writeup.comments.push(comment);\n      writeup.commentCount++;\n      writeup.newComment.body = \"\";\n    });\n  }\n};\nTopComponent = __decorate([Component({\n  selector: \"app-top\",\n  template: ` <div style=\"padding-top: 65px\" class=\"container\">\n    <!-- // drop down button select day, week, month, all time -->\n    <!-- <div class=\"btn-group float-end\">\n      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Week</button>\n      <ul class=\"dropdown-menu dropdown-menu-end\">\n        <li><a class=\"dropdown-item\" href=\"#\">Newest</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Day</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Week</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Month</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">All Time</a></li>\n      </ul>\n    </div> -->\n    <div class=\"clearfix\"></div>\n    <div *ngFor=\"let writeup of sortedWriteups()\" class=\"card\">\n      <div class=\"card-body py-1\">\n        <div class=\"row\">\n          <div class=\"col-md-1\">\n            <i *ngIf=\"!hasVoted(writeup)\" (click)=\"addVote(writeup)\" class=\"bi bi-caret-up\" style=\"font-size: 2rem;   vertical-align: 0em;\"></i>\n            <i *ngIf=\"hasVoted(writeup)\" (click)=\"removeVote(getVote(writeup)!, writeup)\" class=\"bi bi-caret-up text-success\" style=\"font-size: 2rem\"></i>\n\n            {{ writeup.voteCount }}\n          </div>\n\n          <div class=\"col-md-11\">\n            <div class=\"row pb-0\">\n              <div class=\"col-md-2\">\n                <a [routerLink]=\"['/ctfs', writeup.ctfID, 'edit']\"> {{ writeup.ctfName }}</a>\n              </div>\n\n              <div class=\"col-md-4\">\n                <a href=\"{{ writeup.url }}\" rel=\"noopener noreferrer\" target=\"_blank\"> {{ writeup.challengeCategory }} / {{ writeup.challengeName }}</a>\n                <span class=\"text-muted\" style=\"padding-left: 5px\">({{ getDomain(writeup.url) }})</span>\n              </div>\n\n              <div class=\"col-md-2\">\n                <div *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }}</div>\n              </div>\n\n              <div class=\"col-md-1\" (click)=\"expandWriteup(writeup)\">{{ writeup.commentCount || 0 }} <i class=\"bi bi-chat\"></i></div>\n\n              <div class=\"col-md-1\">\n                <button *ngIf=\"!writeup.isExpanded\" type=\"button\" class=\"btn btn-primary btn-sm float-end\" (click)=\"expandWriteup(writeup)\">Expand</button>\n                <button *ngIf=\"writeup.isExpanded\" type=\"button\" class=\"btn btn-primary btn-sm float-end\" (click)=\"writeup.isExpanded = false\">Hide</button>\n\n                <button *ngIf=\"me.isAdmin || writeup.submitterID == me.id\" type=\"button\" class=\"btn btn-warning btn-sm float-end\" [routerLink]=\"['/writeups', writeup.id, 'edit']\">Edit</button>\n              </div>\n            </div>\n            <div class=\"row pb-0\">\n              <div class=\"col-md-2\">\n                <!-- <p>{{ writeup.body }}</p> -->\n                <p>{{ writeup.ts | dateAgo }}</p>\n\n</div>\n<div class=\"col-md-10\">\n<span *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }}</span>\n</div>\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"writeup.isExpanded\">\n            <div *ngFor=\"let comment of writeup.comments\">\n              <hr />\n              <p class=\"text-muted\">{{ comment.username || \"Anonymous\" }} - {{ comment.ts | dateAgo }}</p>\n              <p>{{ comment.body }}</p>\n            </div>\n\n            <div *ngIf=\"!!me.id\">\n              <textarea [(ngModel)]=\"writeup.newComment.body\" class=\"form-control\"></textarea>\n              <button (click)=\"addComment(writeup)\" class=\"btn btn-primary\">Add Comment</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`,\n  styles: []\n})], TopComponent);\nexport { TopComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAsFlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAoBC,cAA8B,EAAUC,QAAkB,EAAUC,WAAwB,EAAUC,cAA8B;IAApI,mBAAc,GAAdH,cAAc;IAA0B,aAAQ,GAARC,QAAQ;IAAoB,gBAAW,GAAXC,WAAW;IAAuB,mBAAc,GAAdC,cAAc;IAJxI,OAAE,GAAS,EAAU;IACrB,aAAQ,GAAc,EAAE;IACxB,UAAK,GAAW,EAAE;EAEyI;EAE3JC,QAAQ;IACN,IAAI,CAACJ,cAAc,CAACK,WAAW,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MACvD,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAExB,IAAI,CAACA,QAAQ,CAACC,OAAO,CAAEC,OAAO,IAAI;QAChCA,OAAO,CAACC,UAAU,GAAG,EAAa;QAClCD,OAAO,CAACC,UAAU,CAACC,IAAI,GAAG,EAAE;QAC5BF,OAAO,CAACG,UAAU,GAAG,KAAK;QAC1BH,OAAO,CAACI,QAAQ,GAAGJ,OAAO,CAACI,QAAQ,IAAI,EAAE;MAC3C,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACX,WAAW,CAACY,QAAQ,EAAE,CAACR,SAAS,CAAES,KAAK,IAAI;MAC9C,IAAI,CAACA,KAAK,GAAGA,KAAK,IAAI,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEAC,QAAQ,CAACP,OAAgB;IACvB,IAAI,CAAC,IAAI,CAACM,KAAK,EAAE;IAEjB,OAAO,CAAC,CAAC,IAAI,CAACA,KAAK,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,KAAKV,OAAO,CAACW,EAAE,CAAC;EAC7D;EAEAC,OAAO,CAACZ,OAAgB;IACtB,OAAO,IAAI,CAACM,KAAK,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,KAAKV,OAAO,CAACW,EAAE,CAAC;EAC3D;EAEAE,OAAO,CAACb,OAAgB;IACtB,MAAMc,IAAI,GAAS;MACjBJ,SAAS,EAAEV,OAAO,CAACW,EAAE;MACrBI,MAAM,EAAE,IAAI,CAACC,EAAE,CAACL;KACT;IAET,IAAI,CAAClB,WAAW,CAACwB,OAAO,CAACH,IAAI,CAAC,CAACjB,SAAS,CAAEY,CAAC,IAAI;MAC7C,IAAI,CAACH,KAAK,CAACY,IAAI,CAACT,CAAC,CAAC;MAClBT,OAAO,CAACmB,SAAS,EAAE;IACrB,CAAC,CAAC;EACJ;EAEAC,UAAU,CAACN,IAAU,EAAEd,OAAgB;IACrCqB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAER,IAAI,CAAC;IAChC,IAAI,CAACrB,WAAW,CAAC8B,UAAU,CAACT,IAAI,CAAC,CAACjB,SAAS,CAAE2B,CAAC,IAAI;MAChD,IAAI,CAAClB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACmB,MAAM,CAAEhB,CAAC,IAAKK,IAAI,CAACH,EAAE,KAAKF,CAAC,CAACE,EAAE,CAAC;MACvDX,OAAO,CAACmB,SAAS,EAAE;IACrB,CAAC,CAAC;EACJ;EAEAO,SAAS,CAACC,CAAS;IACjB,OAAO,IAAIC,GAAG,CAACD,CAAC,CAAC,CAACE,QAAQ;EAC5B;EAEAC,cAAc;IACZ,OAAO,IAAI,CAAChC,QAAQ,CAACiC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACd,SAAS,GAAGa,CAAC,CAACb,SAAS,CAAC;EAChE;EAEAe,aAAa,CAAClC,OAAgB;IAC5BA,OAAO,CAACG,UAAU,GAAG,IAAI;IAEzB,IAAI,CAACT,cAAc,CAACyC,qBAAqB,CAACnC,OAAO,CAACW,EAAE,CAAC,CAACd,SAAS,CAAEO,QAAQ,IAAI;MAC3EJ,OAAO,CAACI,QAAQ,GAAGA,QAAQ;IAC7B,CAAC,CAAC;EACJ;EAEAgC,UAAU,CAACpC,OAAgB;IACzBA,OAAO,CAACC,UAAU,CAACS,SAAS,GAAGV,OAAO,CAACW,EAAE;IACzCX,OAAO,CAACC,UAAU,CAACc,MAAM,GAAG,IAAI,CAACC,EAAE,CAACL,EAAE;IAEtC,IAAI,CAACjB,cAAc,CAACO,UAAU,CAACD,OAAO,CAACC,UAAU,CAAC,CAACJ,SAAS,CAAEwC,OAAO,IAAI;MACvErC,OAAO,CAACI,QAAQ,CAACc,IAAI,CAACmB,OAAO,CAAC;MAC9BrC,OAAO,CAACsC,YAAY,EAAE;MACtBtC,OAAO,CAACC,UAAU,CAACC,IAAI,GAAG,EAAE;IAC9B,CAAC,CAAC;EACJ;CACD;AAhFYb,YAAY,eAhFxBD,SAAS,CAAC;EACTmD,QAAQ,EAAE,SAAS;EACnBC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA2EH;EACPC,MAAM,EAAE;CACT,CAAC,GACWpD,YAAY,CAgFxB;SAhFYA,YAAY","names":["Component","TopComponent","constructor","writeupService","location","voteService","commentService","ngOnInit","getWriteups","subscribe","writeups","forEach","writeup","newComment","body","isExpanded","comments","getVotes","votes","hasVoted","find","v","writeupID","id","getVote","addVote","vote","userID","me","newVote","push","voteCount","removeVote","console","log","deleteVote","_","filter","getDomain","u","URL","hostname","sortedWriteups","sort","a","b","expandWriteup","getCommentsForWriteup","addComment","comment","commentCount","selector","template","styles"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/top/top.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { CommentService, Comment } from \"src/app/services/comment.service\";\nimport { User } from \"src/app/services/user.service\";\nimport { Vote, VoteService } from \"src/app/services/vote.service\";\nimport { Writeup, WriteupService } from \"src/app/services/writeup.service\";\n\n@Component({\n  selector: \"app-top\",\n  template: ` <div style=\"padding-top: 65px\" class=\"container\">\n    <!-- // drop down button select day, week, month, all time -->\n    <!-- <div class=\"btn-group float-end\">\n      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Week</button>\n      <ul class=\"dropdown-menu dropdown-menu-end\">\n        <li><a class=\"dropdown-item\" href=\"#\">Newest</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Day</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Week</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Month</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">All Time</a></li>\n      </ul>\n    </div> -->\n    <div class=\"clearfix\"></div>\n    <div *ngFor=\"let writeup of sortedWriteups()\" class=\"card\">\n      <div class=\"card-body py-1\">\n        <div class=\"row\">\n          <div class=\"col-md-1\">\n            <i *ngIf=\"!hasVoted(writeup)\" (click)=\"addVote(writeup)\" class=\"bi bi-caret-up\" style=\"font-size: 2rem;   vertical-align: 0em;\"></i>\n            <i *ngIf=\"hasVoted(writeup)\" (click)=\"removeVote(getVote(writeup)!, writeup)\" class=\"bi bi-caret-up text-success\" style=\"font-size: 2rem\"></i>\n\n            {{ writeup.voteCount }}\n          </div>\n\n          <div class=\"col-md-11\">\n            <div class=\"row pb-0\">\n              <div class=\"col-md-2\">\n                <a [routerLink]=\"['/ctfs', writeup.ctfID, 'edit']\"> {{ writeup.ctfName }}</a>\n              </div>\n\n              <div class=\"col-md-4\">\n                <a href=\"{{ writeup.url }}\" rel=\"noopener noreferrer\" target=\"_blank\"> {{ writeup.challengeCategory }} / {{ writeup.challengeName }}</a>\n                <span class=\"text-muted\" style=\"padding-left: 5px\">({{ getDomain(writeup.url) }})</span>\n              </div>\n\n              <div class=\"col-md-2\">\n                <div *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }}</div>\n              </div>\n\n              <div class=\"col-md-1\" (click)=\"expandWriteup(writeup)\">{{ writeup.commentCount || 0 }} <i class=\"bi bi-chat\"></i></div>\n\n              <div class=\"col-md-1\">\n                <button *ngIf=\"!writeup.isExpanded\" type=\"button\" class=\"btn btn-primary btn-sm float-end\" (click)=\"expandWriteup(writeup)\">Expand</button>\n                <button *ngIf=\"writeup.isExpanded\" type=\"button\" class=\"btn btn-primary btn-sm float-end\" (click)=\"writeup.isExpanded = false\">Hide</button>\n\n                <button *ngIf=\"me.isAdmin || writeup.submitterID == me.id\" type=\"button\" class=\"btn btn-warning btn-sm float-end\" [routerLink]=\"['/writeups', writeup.id, 'edit']\">Edit</button>\n              </div>\n            </div>\n            <div class=\"row pb-0\">\n              <div class=\"col-md-2\">\n                <!-- <p>{{ writeup.body }}</p> -->\n                <p>{{ writeup.ts | dateAgo }}</p>\n\n</div>\n<div class=\"col-md-10\">\n<span *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }}</span>\n</div>\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"writeup.isExpanded\">\n            <div *ngFor=\"let comment of writeup.comments\">\n              <hr />\n              <p class=\"text-muted\">{{ comment.username || \"Anonymous\" }} - {{ comment.ts | dateAgo }}</p>\n              <p>{{ comment.body }}</p>\n            </div>\n\n            <div *ngIf=\"!!me.id\">\n              <textarea [(ngModel)]=\"writeup.newComment.body\" class=\"form-control\"></textarea>\n              <button (click)=\"addComment(writeup)\" class=\"btn btn-primary\">Add Comment</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`,\n  styles: [],\n})\nexport class TopComponent {\n  me: User = {} as User;\n  writeups: Writeup[] = [];\n  votes: Vote[] = [];\n\n  constructor(private writeupService: WriteupService, private location: Location, private voteService: VoteService, private commentService: CommentService) {}\n\n  ngOnInit(): void {\n    this.writeupService.getWriteups().subscribe((writeups) => {\n      this.writeups = writeups;\n\n      this.writeups.forEach((writeup) => {\n        writeup.newComment = {} as Comment;\n        writeup.newComment.body = \"\";\n        writeup.isExpanded = false;\n        writeup.comments = writeup.comments || [];\n      });\n    });\n\n    this.voteService.getVotes().subscribe((votes) => {\n      this.votes = votes || [];\n    });\n  }\n\n  hasVoted(writeup: Writeup): boolean {\n    if (!this.votes) {\n    }\n    return !!this.votes.find((v) => v.writeupID === writeup.id);\n  }\n\n  getVote(writeup: Writeup): Vote | undefined {\n    return this.votes.find((v) => v.writeupID === writeup.id);\n  }\n\n  addVote(writeup: Writeup): void {\n    const vote: Vote = {\n      writeupID: writeup.id,\n      userID: this.me.id,\n    } as Vote;\n\n    this.voteService.newVote(vote).subscribe((v) => {\n      this.votes.push(v);\n      writeup.voteCount++;\n    });\n  }\n\n  removeVote(vote: Vote, writeup: Writeup): void {\n    console.log(\"remove vote\", vote);\n    this.voteService.deleteVote(vote).subscribe((_) => {\n      this.votes = this.votes.filter((v) => vote.id !== v.id);\n      writeup.voteCount--;\n    });\n  }\n\n  getDomain(u: string): string {\n    return new URL(u).hostname;\n  }\n\n  sortedWriteups(): Writeup[] {\n    return this.writeups.sort((a, b) => b.voteCount - a.voteCount);\n  }\n\n  expandWriteup(writeup: Writeup): void {\n    writeup.isExpanded = true;\n\n    this.commentService.getCommentsForWriteup(writeup.id).subscribe((comments) => {\n      writeup.comments = comments;\n    });\n  }\n\n  addComment(writeup: Writeup): void {\n    writeup.newComment.writeupID = writeup.id;\n    writeup.newComment.userID = this.me.id;\n\n    this.commentService.newComment(writeup.newComment).subscribe((comment) => {\n      writeup.comments.push(comment);\n      writeup.commentCount++;\n      writeup.newComment.body = \"\";\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}