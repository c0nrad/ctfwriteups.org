{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nexport class NewsletterService {\n  constructor(http, config) {\n    this.http = http;\n    this.config = config;\n  }\n  subscribe(email) {\n    return this.http.post(`${this.config.getOrigin()}/api/v1/newsletter`, {\n      email\n    });\n  }\n  unsubscribe(email) {\n    return this.http.post(`${this.config.getOrigin()}/api/v1/newsletter`, {\n      email\n    });\n  }\n  static #_ = this.ɵfac = function NewsletterService_Factory(t) {\n    return new (t || NewsletterService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NewsletterService,\n    factory: NewsletterService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;;AAeA,OAAM,MAAOA,iBAAiB;EAC5BC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAkB;EAEtEC,SAAS,CAACC,KAAa;IACrB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACH,MAAM,CAACI,SAAS,EAAE,oBAAoB,EAAE;MAAEF;IAAK,CAAE,CAAC;EACxF;EAEAG,WAAW,CAACH,KAAa;IACvB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACH,MAAM,CAACI,SAAS,EAAE,oBAAoB,EAAE;MAAEF;IAAK,CAAE,CAAC;EACxF;EAAC;qBATUL,iBAAiB;EAAA;EAAA;WAAjBA,iBAAiB;IAAAS,SAAjBT,iBAAiB;IAAAU,YAFhB;EAAM","names":["NewsletterService","constructor","http","config","subscribe","email","post","getOrigin","unsubscribe","factory","providedIn"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/services/newsletter.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ConfigService } from \"./config.service\";\nimport { Observable } from \"rxjs\";\n\nexport interface NewsletterSubscription {\n  id: string;\n  ts: number;\n\n  email: string;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NewsletterService {\n  constructor(private http: HttpClient, private config: ConfigService) {}\n\n  subscribe(email: string): Observable<void> {\n    return this.http.post<void>(`${this.config.getOrigin()}/api/v1/newsletter`, { email });\n  }\n\n  unsubscribe(email: string): Observable<void> {\n    return this.http.post<void>(`${this.config.getOrigin()}/api/v1/newsletter`, { email });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}