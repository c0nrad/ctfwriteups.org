{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nexport class ChallengeService {\n  constructor(http, config) {\n    this.http = http;\n    this.config = config;\n  }\n  getChallenges(ctfID) {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/ctfs/${ctfID}/challenges`);\n  }\n  newChallenge(challenge) {\n    return this.http.post(`${this.config.getOrigin()}/api/v1/challenges`, challenge);\n  }\n  updateChallenge(challenge) {\n    return this.http.put(`${this.config.getOrigin()}/api/v1/challenges/${challenge.id}`, challenge);\n  }\n  getChallenge(ctfID, id) {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/challenges/${id}`);\n  }\n  deleteChallenge(challenge) {\n    return this.http.delete(`${this.config.getOrigin()}/api/v1/challenges/${challenge.id}`);\n  }\n  static #_ = this.ɵfac = function ChallengeService_Factory(t) {\n    return new (t || ChallengeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChallengeService,\n    factory: ChallengeService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;;AA0BA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAkB;EAEtEC,aAAa,CAACC,KAAa;IACzB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAc,GAAG,IAAI,CAACH,MAAM,CAACI,SAAS,EAAE,gBAAgBF,KAAK,aAAa,CAAC;EACjG;EAEAG,YAAY,CAACC,SAAoB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAY,GAAG,IAAI,CAACP,MAAM,CAACI,SAAS,EAAE,oBAAoB,EAAEE,SAAS,CAAC;EAC7F;EAEAE,eAAe,CAACF,SAAoB;IAClC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAY,GAAG,IAAI,CAACT,MAAM,CAACI,SAAS,EAAE,sBAAsBE,SAAS,CAACI,EAAE,EAAE,EAAEJ,SAAS,CAAC;EAC5G;EAEAK,YAAY,CAACT,KAAa,EAAEQ,EAAU;IACpC,OAAO,IAAI,CAACX,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,MAAM,CAACI,SAAS,EAAE,sBAAsBM,EAAE,EAAE,CAAC;EACvF;EAEAE,eAAe,CAACN,SAAoB;IAClC,OAAO,IAAI,CAACP,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACb,MAAM,CAACI,SAAS,EAAE,sBAAsBE,SAAS,CAACI,EAAE,EAAE,CAAC;EAC/F;EAAC;qBArBUb,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAiB,SAAhBjB,gBAAgB;IAAAkB,YAFf;EAAM","names":["ChallengeService","constructor","http","config","getChallenges","ctfID","get","getOrigin","newChallenge","challenge","post","updateChallenge","put","id","getChallenge","deleteChallenge","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/services/challenge.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ConfigService } from \"./config.service\";\n\nexport interface Challenge {\n  id: string;\n  ts: number;\n\n  ctfID: string;\n  submitterID: string;\n\n  name: string;\n  category: string;\n  solves: number;\n\n  shortDescription: string;\n  tags: string[];\n\n  // virtual\n  isEditMode: boolean;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ChallengeService {\n  constructor(private http: HttpClient, private config: ConfigService) {}\n\n  getChallenges(ctfID: string): Observable<Challenge[]> {\n    return this.http.get<Challenge[]>(`${this.config.getOrigin()}/api/v1/ctfs/${ctfID}/challenges`);\n  }\n\n  newChallenge(challenge: Challenge): Observable<Challenge> {\n    return this.http.post<Challenge>(`${this.config.getOrigin()}/api/v1/challenges`, challenge);\n  }\n\n  updateChallenge(challenge: Challenge): Observable<Challenge> {\n    return this.http.put<Challenge>(`${this.config.getOrigin()}/api/v1/challenges/${challenge.id}`, challenge);\n  }\n\n  getChallenge(ctfID: string, id: string): Observable<Challenge> {\n    return this.http.get<Challenge>(`${this.config.getOrigin()}/api/v1/challenges/${id}`);\n  }\n\n  deleteChallenge(challenge: Challenge): Observable<void> {\n    return this.http.delete<void>(`${this.config.getOrigin()}/api/v1/challenges/${challenge.id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}