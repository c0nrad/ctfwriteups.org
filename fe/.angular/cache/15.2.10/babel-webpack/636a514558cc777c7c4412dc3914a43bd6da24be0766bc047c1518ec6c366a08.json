{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nexport class WriteupService {\n  constructor(http, config) {\n    this.http = http;\n    this.config = config;\n  }\n  getWriteups() {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/writeups`);\n  }\n  newWriteup(writeup) {\n    return this.http.post(`${this.config.getOrigin()}/api/v1/writeups`, writeup);\n  }\n  updateWriteup(writeup) {\n    return this.http.put(`${this.config.getOrigin()}/api/v1/writeups/${writeup.id}`, writeup);\n  }\n  getWriteup(id) {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/writeups/${id}`);\n  }\n  getWriteupsForCTF(ctfID) {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/ctfs/${ctfID}/writeups`);\n  }\n  deleteWriteup(writeup) {\n    return this.http.delete(`${this.config.getOrigin()}/api/v1/writeups/${writeup.id}`);\n  }\n  static #_ = this.ɵfac = function WriteupService_Factory(t) {\n    return new (t || WriteupService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WriteupService,\n    factory: WriteupService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;;AAqCA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAkB;EAEtEC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,kBAAkB,CAAC;EAC/E;EAEAC,UAAU,CAACC,OAAgB;IACzB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAU,GAAG,IAAI,CAACN,MAAM,CAACG,SAAS,EAAE,kBAAkB,EAAEE,OAAO,CAAC;EACvF;EAEAE,aAAa,CAACF,OAAgB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAU,GAAG,IAAI,CAACR,MAAM,CAACG,SAAS,EAAE,oBAAoBE,OAAO,CAACI,EAAE,EAAE,EAAEJ,OAAO,CAAC;EACpG;EAEAK,UAAU,CAACD,EAAU;IACnB,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,oBAAoBM,EAAE,EAAE,CAAC;EACnF;EAEAE,iBAAiB,CAACC,KAAa;IAC7B,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,gBAAgBS,KAAK,WAAW,CAAC;EAC7F;EAEAC,aAAa,CAACR,OAAgB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACe,MAAM,CAAO,GAAG,IAAI,CAACd,MAAM,CAACG,SAAS,EAAE,oBAAoBE,OAAO,CAACI,EAAE,EAAE,CAAC;EAC3F;EAAC;qBAzBUZ,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAkB,SAAdlB,cAAc;IAAAmB,YAFb;EAAM","names":["WriteupService","constructor","http","config","getWriteups","get","getOrigin","newWriteup","writeup","post","updateWriteup","put","id","getWriteup","getWriteupsForCTF","ctfID","deleteWriteup","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/services/writeup.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ConfigService } from \"./config.service\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\n\nexport interface Writeup {\n  id: string;\n  ts: number;\n\n  title: string;\n  url: string;\n  // body: string;\n\n  //authorID: string\n  submitterID: string;\n\n  voteCount: number;\n  commentCount: number;\n\n  ctfID: string;\n  ctfName: string;\n\n  challengeID: string;\n  challengeName: string;\n  challengeCategory: string;\n\n  tags: string[];\n\n  // UI\n  isExpanded: boolean;\n  comments: Comment[];\n  newComment: Comment;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class WriteupService {\n  constructor(private http: HttpClient, private config: ConfigService) {}\n\n  getWriteups(): Observable<Writeup[]> {\n    return this.http.get<Writeup[]>(`${this.config.getOrigin()}/api/v1/writeups`);\n  }\n\n  newWriteup(writeup: Writeup): Observable<Writeup> {\n    return this.http.post<Writeup>(`${this.config.getOrigin()}/api/v1/writeups`, writeup);\n  }\n\n  updateWriteup(writeup: Writeup): Observable<Writeup> {\n    return this.http.put<Writeup>(`${this.config.getOrigin()}/api/v1/writeups/${writeup.id}`, writeup);\n  }\n\n  getWriteup(id: string): Observable<Writeup> {\n    return this.http.get<Writeup>(`${this.config.getOrigin()}/api/v1/writeups/${id}`);\n  }\n\n  getWriteupsForCTF(ctfID: string): Observable<Writeup[]> {\n    return this.http.get<Writeup[]>(`${this.config.getOrigin()}/api/v1/ctfs/${ctfID}/writeups`);\n  }\n\n  deleteWriteup(writeup: Writeup): Observable<void> {\n    return this.http.delete<void>(`${this.config.getOrigin()}/api/v1/writeups/${writeup.id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}