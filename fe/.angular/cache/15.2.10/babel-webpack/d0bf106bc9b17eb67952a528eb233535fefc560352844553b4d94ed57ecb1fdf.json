{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/writeup.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"src/app/services/vote.service\";\nimport * as i4 from \"src/app/services/comment.service\";\nimport * as i5 from \"src/app/services/user.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../date-ago.pipe\";\nfunction TopComponent_div_2_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"i\", 22);\n    i0.ɵɵlistener(\"click\", function TopComponent_div_2_i_4_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const writeup_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.addVote(writeup_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TopComponent_div_2_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"i\", 23);\n    i0.ɵɵlistener(\"click\", function TopComponent_div_2_i_5_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const writeup_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.removeVote(ctx_r10.getVote(writeup_r1), writeup_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TopComponent_div_2_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tag_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tag_r13);\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/writeups\", a1, \"edit\"];\n};\nfunction TopComponent_div_2_i_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 25);\n  }\n  if (rf & 2) {\n    const writeup_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(1, _c0, writeup_r1.id));\n  }\n}\nfunction TopComponent_div_2_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelementStart(2, \"p\", 27);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"dateAgo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const comment_r17 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", comment_r17.username || \"Anonymous\", \" - \", i0.ɵɵpipeBind1(4, 3, comment_r17.ts), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(comment_r17.body);\n  }\n}\nfunction TopComponent_div_2_div_28_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"textarea\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function TopComponent_div_2_div_28_div_2_Template_textarea_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const writeup_r1 = i0.ɵɵnextContext(2).$implicit;\n      return i0.ɵɵresetView(writeup_r1.newComment.body = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function TopComponent_div_2_div_28_div_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const writeup_r1 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.addComment(writeup_r1));\n    });\n    i0.ɵɵtext(3, \"Add Comment\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const writeup_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", writeup_r1.newComment.body);\n  }\n}\nfunction TopComponent_div_2_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TopComponent_div_2_div_28_div_1_Template, 7, 5, \"div\", 26);\n    i0.ɵɵtemplate(2, TopComponent_div_2_div_28_div_2_Template, 4, 1, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const writeup_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", writeup_r1.comments);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.me.id);\n  }\n}\nconst _c1 = function (a1) {\n  return [\"/ctfs\", a1, \"edit\"];\n};\nfunction TopComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5)(3, \"div\", 6);\n    i0.ɵɵtemplate(4, TopComponent_div_2_i_4_Template, 1, 0, \"i\", 7);\n    i0.ɵɵtemplate(5, TopComponent_div_2_i_5_Template, 1, 0, \"i\", 8);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 9)(8, \"div\", 10)(9, \"div\", 11)(10, \"a\", 12);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 13)(13, \"a\", 14);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementStart(15, \"span\", 15);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\", 16);\n    i0.ɵɵlistener(\"click\", function TopComponent_div_2_Template_div_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const writeup_r1 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.toggleWriteup(writeup_r1));\n    });\n    i0.ɵɵtext(18);\n    i0.ɵɵelement(19, \"i\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 10)(21, \"div\", 11)(22, \"p\");\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"dateAgo\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 18);\n    i0.ɵɵtemplate(26, TopComponent_div_2_span_26_Template, 2, 1, \"span\", 19);\n    i0.ɵɵtemplate(27, TopComponent_div_2_i_27_Template, 1, 3, \"i\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(28, TopComponent_div_2_div_28_Template, 3, 2, \"div\", 21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const writeup_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.hasVoted(writeup_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.hasVoted(writeup_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", writeup_r1.voteCount, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(16, _c1, writeup_r1.ctfID));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", writeup_r1.ctfName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", writeup_r1.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", writeup_r1.challengeCategory, \" / \", writeup_r1.challengeName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", writeup_r1.url, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", writeup_r1.commentCount || 0, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 14, writeup_r1.ts));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", writeup_r1.tags);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.me.isAdmin || writeup_r1.submitterID == ctx_r0.me.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", writeup_r1.isExpanded);\n  }\n}\nexport class TopComponent {\n  constructor(writeupService, location, voteService, commentService, userService) {\n    this.writeupService = writeupService;\n    this.location = location;\n    this.voteService = voteService;\n    this.commentService = commentService;\n    this.userService = userService;\n    this.me = {};\n    this.writeups = [];\n    this.votes = [];\n  }\n  ngOnInit() {\n    this.writeupService.getWriteups().subscribe(writeups => {\n      this.writeups = writeups;\n      this.writeups.forEach(writeup => {\n        writeup.newComment = {};\n        writeup.newComment.body = \"\";\n        writeup.isExpanded = false;\n        writeup.comments = writeup.comments || [];\n      });\n    });\n    this.voteService.getVotes().subscribe(votes => {\n      this.votes = votes || [];\n    });\n    this.userService.getMe().subscribe(me => {\n      this.me = me;\n    });\n  }\n  hasVoted(writeup) {\n    if (!this.votes) {}\n    return !!this.votes.find(v => v.writeupID === writeup.id);\n  }\n  getVote(writeup) {\n    return this.votes.find(v => v.writeupID === writeup.id);\n  }\n  addVote(writeup) {\n    const vote = {\n      writeupID: writeup.id,\n      userID: this.me.id\n    };\n    this.voteService.newVote(vote).subscribe(v => {\n      this.votes.push(v);\n      writeup.voteCount++;\n    });\n  }\n  removeVote(vote, writeup) {\n    console.log(\"remove vote\", vote);\n    this.voteService.deleteVote(vote).subscribe(_ => {\n      this.votes = this.votes.filter(v => vote.id !== v.id);\n      writeup.voteCount--;\n    });\n  }\n  getDomain(u) {\n    return new URL(u).hostname;\n  }\n  sortedWriteups() {\n    return this.writeups.sort((a, b) => b.voteCount - a.voteCount);\n  }\n  toggleWriteup(writeup) {\n    writeup.isExpanded = !writeup.isExpanded;\n    if (writeup.isExpanded) {\n      this.commentService.getCommentsForWriteup(writeup.id).subscribe(comments => {\n        writeup.comments = comments;\n      });\n    }\n  }\n  addComment(writeup) {\n    writeup.newComment.writeupID = writeup.id;\n    writeup.newComment.userID = this.me.id;\n    this.commentService.newComment(writeup.newComment).subscribe(comment => {\n      writeup.comments.push(comment);\n      writeup.commentCount++;\n      writeup.newComment.body = \"\";\n    });\n  }\n  static #_ = this.ɵfac = function TopComponent_Factory(t) {\n    return new (t || TopComponent)(i0.ɵɵdirectiveInject(i1.WriteupService), i0.ɵɵdirectiveInject(i2.Location), i0.ɵɵdirectiveInject(i3.VoteService), i0.ɵɵdirectiveInject(i4.CommentService), i0.ɵɵdirectiveInject(i5.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TopComponent,\n    selectors: [[\"app-top\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"container\", 2, \"padding-top\", \"65px\"], [1, \"clearfix\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"card-body\", \"py-1\"], [1, \"row\"], [1, \"col-1\"], [\"class\", \"bi bi-caret-up\", \"style\", \"font-size: 2rem;   vertical-align: 0em;\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"bi bi-caret-up text-success\", \"style\", \"font-size: 2rem\", 3, \"click\", 4, \"ngIf\"], [1, \"col-11\"], [1, \"row\", \"pb-0\"], [1, \"col-2\"], [3, \"routerLink\"], [1, \"col-9\"], [\"rel\", \"noopener noreferrer\", \"target\", \"_blank\", 3, \"href\"], [1, \"text-muted\", 2, \"padding-left\", \"5px\"], [1, \"col-1\", 3, \"click\"], [1, \"bi\", \"bi-chat\"], [1, \"col-10\"], [\"class\", \"badge bg-secondary me-1\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"bi bi-pencil text-muted\", 3, \"routerLink\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"bi\", \"bi-caret-up\", 2, \"font-size\", \"2rem\", \"vertical-align\", \"0em\", 3, \"click\"], [1, \"bi\", \"bi-caret-up\", \"text-success\", 2, \"font-size\", \"2rem\", 3, \"click\"], [1, \"badge\", \"bg-secondary\", \"me-1\"], [1, \"bi\", \"bi-pencil\", \"text-muted\", 3, \"routerLink\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-muted\"], [1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function TopComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵtemplate(2, TopComponent_div_2_Template, 29, 18, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sortedWriteups());\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i6.RouterLink, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel, i8.DateAgoPipe],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ctx_r10","TopComponent","constructor","writeupService","location","voteService","commentService","userService","ngOnInit","getWriteups","subscribe","writeups","forEach","writeup","newComment","body","isExpanded","comments","getVotes","votes","getMe","me","hasVoted","find","v","writeupID","id","getVote","addVote","vote","userID","newVote","push","voteCount","removeVote","console","log","deleteVote","_","filter","getDomain","u","URL","hostname","sortedWriteups","sort","a","b","toggleWriteup","getCommentsForWriteup","addComment","comment","commentCount","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/top/top.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { CommentService, Comment } from \"src/app/services/comment.service\";\nimport { User, UserService } from \"src/app/services/user.service\";\nimport { Vote, VoteService } from \"src/app/services/vote.service\";\nimport { Writeup, WriteupService } from \"src/app/services/writeup.service\";\n\n@Component({\n  selector: \"app-top\",\n  template: ` <div style=\"padding-top: 65px\" class=\"container\">\n    <!-- // drop down button select day, week, month, all time -->\n    <!-- <div class=\"btn-group float-end\">\n      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Week</button>\n      <ul class=\"dropdown-menu dropdown-menu-end\">\n        <li><a class=\"dropdown-item\" href=\"#\">Newest</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Day</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Week</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Month</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">All Time</a></li>\n      </ul>\n    </div> -->\n    <div class=\"clearfix\"></div>\n    <div *ngFor=\"let writeup of sortedWriteups()\" class=\"card\">\n      <div class=\"card-body py-1\">\n        <div class=\"row\">\n          <div class=\"col-1\">\n            <i *ngIf=\"!hasVoted(writeup)\" (click)=\"addVote(writeup)\" class=\"bi bi-caret-up\" style=\"font-size: 2rem;   vertical-align: 0em;\"></i>\n            <i *ngIf=\"hasVoted(writeup)\" (click)=\"removeVote(getVote(writeup)!, writeup)\" class=\"bi bi-caret-up text-success\" style=\"font-size: 2rem\"></i>\n\n            {{ writeup.voteCount }}\n          </div>\n\n          <div class=\"col-11\">\n            <div class=\"row pb-0\">\n              <div class=\"col-2\">\n                <a [routerLink]=\"['/ctfs', writeup.ctfID, 'edit']\"> {{ writeup.ctfName }}</a>\n              </div>\n\n              <div class=\"col-9\">\n                <a href=\"{{ writeup.url }}\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  {{ writeup.challengeCategory }} / {{ writeup.challengeName }} <span class=\"text-muted\" style=\"padding-left: 5px\">({{ writeup.url }})</span></a\n                >\n              </div>\n\n              <div class=\"col-1\" (click)=\"toggleWriteup(writeup)\">{{ writeup.commentCount || 0 }} <i class=\"bi bi-chat\"></i></div>\n            </div>\n            <div class=\"row pb-0\">\n              <div class=\"col-2\">\n                <!-- <p>{{ writeup.body }}</p> -->\n                <p>{{ writeup.ts | dateAgo }}</p>\n              </div>\n              <div class=\"col-10\">\n                <span *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary me-1\">{{ tag }}</span>\n                <i *ngIf=\"me.isAdmin || writeup.submitterID == me.id\" class=\"bi bi-pencil text-muted\" [routerLink]=\"['/writeups', writeup.id, 'edit']\"></i>\n              </div>\n            </div>\n\n            <div *ngIf=\"writeup.isExpanded\">\n              <div *ngFor=\"let comment of writeup.comments\">\n                <hr />\n                <p class=\"text-muted\">{{ comment.username || \"Anonymous\" }} - {{ comment.ts | dateAgo }}</p>\n                <p>{{ comment.body }}</p>\n              </div>\n\n              <div *ngIf=\"me.id\">\n                <textarea [(ngModel)]=\"writeup.newComment.body\" class=\"form-control\"></textarea>\n                <button (click)=\"addComment(writeup)\" class=\"btn btn-primary\">Add Comment</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`,\n  styles: [],\n})\nexport class TopComponent {\n  me: User = {} as User;\n  writeups: Writeup[] = [];\n  votes: Vote[] = [];\n\n  constructor(private writeupService: WriteupService, private location: Location, private voteService: VoteService, private commentService: CommentService, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.writeupService.getWriteups().subscribe((writeups) => {\n      this.writeups = writeups;\n\n      this.writeups.forEach((writeup) => {\n        writeup.newComment = {} as Comment;\n        writeup.newComment.body = \"\";\n        writeup.isExpanded = false;\n        writeup.comments = writeup.comments || [];\n      });\n    });\n\n    this.voteService.getVotes().subscribe((votes) => {\n      this.votes = votes || [];\n    });\n\n    this.userService.getMe().subscribe((me) => {\n      this.me = me;\n    });\n  }\n\n  hasVoted(writeup: Writeup): boolean {\n    if (!this.votes) {\n    }\n    return !!this.votes.find((v) => v.writeupID === writeup.id);\n  }\n\n  getVote(writeup: Writeup): Vote | undefined {\n    return this.votes.find((v) => v.writeupID === writeup.id);\n  }\n\n  addVote(writeup: Writeup): void {\n    const vote: Vote = {\n      writeupID: writeup.id,\n      userID: this.me.id,\n    } as Vote;\n\n    this.voteService.newVote(vote).subscribe((v) => {\n      this.votes.push(v);\n      writeup.voteCount++;\n    });\n  }\n\n  removeVote(vote: Vote, writeup: Writeup): void {\n    console.log(\"remove vote\", vote);\n    this.voteService.deleteVote(vote).subscribe((_) => {\n      this.votes = this.votes.filter((v) => vote.id !== v.id);\n      writeup.voteCount--;\n    });\n  }\n\n  getDomain(u: string): string {\n    return new URL(u).hostname;\n  }\n\n  sortedWriteups(): Writeup[] {\n    return this.writeups.sort((a, b) => b.voteCount - a.voteCount);\n  }\n\n  toggleWriteup(writeup: Writeup): void {\n    writeup.isExpanded = !writeup.isExpanded;\n\n    if (writeup.isExpanded) {\n      this.commentService.getCommentsForWriteup(writeup.id).subscribe((comments) => {\n        writeup.comments = comments;\n      });\n    }\n  }\n\n  addComment(writeup: Writeup): void {\n    writeup.newComment.writeupID = writeup.id;\n    writeup.newComment.userID = this.me.id;\n\n    this.commentService.newComment(writeup.newComment).subscribe((comment) => {\n      writeup.comments.push(comment);\n      writeup.commentCount++;\n      writeup.newComment.body = \"\";\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}