{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/ctf.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"src/app/services/user.service\";\nimport * as i5 from \"@angular/forms\";\nfunction CtfEditComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CtfEditComponent_div_8_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const category_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeCategory(category_r2));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", category_r2, \" \");\n  }\n}\nfunction CtfEditComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"table\", 11)(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Challenge Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Challenge Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Solves\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Writeups\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"URL\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const category_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r5, \" \");\n  }\n}\nexport class CtfEditComponent {\n  constructor(route, ctfService, location, userService) {\n    this.route = route;\n    this.ctfService = ctfService;\n    this.location = location;\n    this.userService = userService;\n    this.ctf = {};\n    this.me = {};\n    this.newCategory = \"\";\n  }\n  ngOnInit() {\n    this.userService.getMe().subscribe(me => {\n      this.me = me;\n      this.route.params.subscribe(params => {\n        if (params[\"id\"]) {\n          this.ctfService.getCTF(params[\"id\"]).subscribe(ctf => {\n            this.ctf = ctf;\n          });\n        } else {\n          this.ctf.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n  save() {\n    if (this.ctf.id) {\n      this.ctfService.updateCTF(this.ctf).subscribe(() => {\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    } else {\n      this.ctfService.newCTF(this.ctf).subscribe(ctf => {\n        this.ctf = ctf;\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    }\n  }\n  removeCategory(category) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories = this.ctf.categories.filter(t => t !== category);\n  }\n  addCategory(category) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories.push(category);\n    this.newCategory = \"\";\n  }\n  static #_ = this.ɵfac = function CtfEditComponent_Factory(t) {\n    return new (t || CtfEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CTFService), i0.ɵɵdirectiveInject(i3.Location), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CtfEditComponent,\n    selectors: [[\"app-ctf-edit\"]],\n    decls: 13,\n    vars: 5,\n    consts: [[1, \"container\", 2, \"padding-top\", \"65px\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"placeholder\", \"CTF Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Categories\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"class\", \"badge bg-secondary\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"badge\", \"bg-secondary\"], [\"tyle\", \"button\", 1, \"btn-close\", 3, \"click\"], [1, \"table\"]],\n    template: function CtfEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"CTF Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CtfEditComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.ctf.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CtfEditComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.newCategory = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CtfEditComponent_Template_button_click_6_listener() {\n          return ctx.addCategory(ctx.newCategory);\n        });\n        i0.ɵɵtext(7, \"Add Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, CtfEditComponent_div_8_Template, 3, 1, \"div\", 6);\n        i0.ɵɵtemplate(9, CtfEditComponent_div_9_Template, 14, 1, \"div\", 7);\n        i0.ɵɵelementStart(10, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CtfEditComponent_Template_button_click_10_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(11, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ctf.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newCategory);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ctf.categories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ctf.categories);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.ctf, \" \");\n      }\n    },\n    dependencies: [i3.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","CtfEditComponent","constructor","route","ctfService","location","userService","ngOnInit","getMe","subscribe","me","params","getCTF","ctf","submitterID","id","newCTF","go","save","updateCTF","removeCategory","category","categories","filter","t","addCategory","push","newCategory","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/ctf-edit/ctf-edit.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { CTF, CTFService } from \"src/app/services/ctf.service\";\nimport { User, UserService } from \"src/app/services/user.service\";\n\n@Component({\n  selector: \"app-ctf-edit\",\n  template: `<div class=\"container\" style=\"padding-top: 65px\">\n    <div class=\"mb-3\">\n      <label class=\"form-label\">CTF Name</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"ctf.name\" />\n    </div>\n\n    <input type=\"text\" class=\"form-control\" placeholder=\"Categories\" [(ngModel)]=\"newCategory\" />\n    <button class=\"btn btn-secondary\" (click)=\"addCategory(newCategory)\">Add Category</button>\n\n    <div *ngFor=\"let category of ctf.categories\" class=\"badge bg-secondary\">{{ category }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeCategory(category)\"></button></div>\n\n    <div *ngFor=\"let category of ctf.categories\">\n      {{ category }}\n      <table class=\"table\">\n        <tr>\n          <th>Challenge Name</th>\n          <th>Challenge Category</th>\n          <th>Solves</th>\n          <th>Writeups</th>\n\n          <th>URL</th>\n        </tr>\n        <!-- \n        <tr *ngFor=\"let ctf of ctfs\">\n          <td>\n            <a [routerLink]=\"['/ctfs', ctf.id, 'edit']\">{{ ctf.name }}</a>\n          </td>\n          <td>{{ ctf.url }}</td>\n        </tr> -->\n      </table>\n    </div>\n\n    <button (click)=\"save()\" class=\"btn btn-primary\">Save</button>\n\n    {{ ctf }}\n  </div>`,\n  styles: [],\n})\nexport class CtfEditComponent {\n  ctf: CTF = {} as CTF;\n  me: User = {} as User;\n  newCategory = \"\";\n\n  constructor(private route: ActivatedRoute, private ctfService: CTFService, private location: Location, private userService: UserService) {}\n\n  ngOnInit() {\n    this.userService.getMe().subscribe((me) => {\n      this.me = me;\n\n      this.route.params.subscribe((params) => {\n        if (params[\"id\"]) {\n          this.ctfService.getCTF(params[\"id\"]).subscribe((ctf) => {\n            this.ctf = ctf;\n          });\n        } else {\n          this.ctf.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n\n  save() {\n    if (this.ctf.id) {\n      this.ctfService.updateCTF(this.ctf).subscribe(() => {\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    } else {\n      this.ctfService.newCTF(this.ctf).subscribe((ctf) => {\n        this.ctf = ctf;\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    }\n  }\n\n  removeCategory(category: string) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories = this.ctf.categories.filter((t) => t !== category);\n  }\n\n  addCategory(category: string) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories.push(category);\n    this.newCategory = \"\";\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}