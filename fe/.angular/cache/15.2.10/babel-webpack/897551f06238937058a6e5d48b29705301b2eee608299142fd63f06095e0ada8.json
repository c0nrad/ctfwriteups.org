{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nexport class CTFService {\n  constructor(http, config) {\n    this.http = http;\n    this.config = config;\n  }\n  getCTFs() {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/ctfs`);\n  }\n  newCTF(ctf) {\n    return this.http.post(`${this.config.getOrigin()}/api/v1/ctfs`, ctf);\n  }\n  updateCTF(ctf) {\n    return this.http.put(`${this.config.getOrigin()}/api/v1/ctfs/${ctf.id}`, ctf);\n  }\n  getCTF(id) {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/ctfs/${id}`);\n  }\n  getChallenges(ctfID) {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/ctfs/${ctfID}/challenges`);\n  }\n  newChallenge(challenge) {\n    return this.http.post(`${this.config.getOrigin()}/api/v1/ctfs/${challenge.ctfID}/challenges`, challenge);\n  }\n  updateChallenge(challenge) {\n    return this.http.put(`${this.config.getOrigin()}/api/v1/ctfs/${challenge.ctfID}/challenges/${challenge.id}`, challenge);\n  }\n  getChallenge(ctfID, id) {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/ctfs/${ctfID}/challenges/${id}`);\n  }\n  static #_ = this.ɵfac = function CTFService_Factory(t) {\n    return new (t || CTFService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CTFService,\n    factory: CTFService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;;AA8BA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAkB;EAEtEC,OAAO;IACL,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,cAAc,CAAC;EACvE;EAEAC,MAAM,CAACC,GAAQ;IACb,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAM,GAAG,IAAI,CAACN,MAAM,CAACG,SAAS,EAAE,cAAc,EAAEE,GAAG,CAAC;EAC3E;EAEAE,SAAS,CAACF,GAAQ;IAChB,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAM,GAAG,IAAI,CAACR,MAAM,CAACG,SAAS,EAAE,gBAAgBE,GAAG,CAACI,EAAE,EAAE,EAAEJ,GAAG,CAAC;EACpF;EAEAK,MAAM,CAACD,EAAU;IACf,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,gBAAgBM,EAAE,EAAE,CAAC;EAC3E;EAEAE,aAAa,CAACC,KAAa;IACzB,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,gBAAgBS,KAAK,aAAa,CAAC;EACjG;EAEAC,YAAY,CAACC,SAAoB;IAC/B,OAAO,IAAI,CAACf,IAAI,CAACO,IAAI,CAAY,GAAG,IAAI,CAACN,MAAM,CAACG,SAAS,EAAE,gBAAgBW,SAAS,CAACF,KAAK,aAAa,EAAEE,SAAS,CAAC;EACrH;EAEAC,eAAe,CAACD,SAAoB;IAClC,OAAO,IAAI,CAACf,IAAI,CAACS,GAAG,CAAY,GAAG,IAAI,CAACR,MAAM,CAACG,SAAS,EAAE,gBAAgBW,SAAS,CAACF,KAAK,eAAeE,SAAS,CAACL,EAAE,EAAE,EAAEK,SAAS,CAAC;EACpI;EAEAE,YAAY,CAACJ,KAAa,EAAEH,EAAU;IACpC,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,gBAAgBS,KAAK,eAAeH,EAAE,EAAE,CAAC;EACrG;EAAC;qBAjCUZ,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAoB,SAAVpB,UAAU;IAAAqB,YAFT;EAAM","names":["CTFService","constructor","http","config","getCTFs","get","getOrigin","newCTF","ctf","post","updateCTF","put","id","getCTF","getChallenges","ctfID","newChallenge","challenge","updateChallenge","getChallenge","factory","providedIn"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/services/ctf.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ConfigService } from \"./config.service\";\nimport { Observable } from \"rxjs\";\n\nexport interface CTF {\n  id: string;\n  ts: number;\n\n  name: string;\n  url: string;\n\n  categories: string[];\n}\n\nexport interface Challenge {\n  id: string;\n  ts: number;\n\n  ctfID: string;\n  submitterID: string;\n\n  name: string;\n  category: string;\n  solves: number;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CTFService {\n  constructor(private http: HttpClient, private config: ConfigService) {}\n\n  getCTFs(): Observable<CTF[]> {\n    return this.http.get<CTF[]>(`${this.config.getOrigin()}/api/v1/ctfs`);\n  }\n\n  newCTF(ctf: CTF): Observable<CTF> {\n    return this.http.post<CTF>(`${this.config.getOrigin()}/api/v1/ctfs`, ctf);\n  }\n\n  updateCTF(ctf: CTF): Observable<CTF> {\n    return this.http.put<CTF>(`${this.config.getOrigin()}/api/v1/ctfs/${ctf.id}`, ctf);\n  }\n\n  getCTF(id: string): Observable<CTF> {\n    return this.http.get<CTF>(`${this.config.getOrigin()}/api/v1/ctfs/${id}`);\n  }\n\n  getChallenges(ctfID: string): Observable<Challenge[]> {\n    return this.http.get<Challenge[]>(`${this.config.getOrigin()}/api/v1/ctfs/${ctfID}/challenges`);\n  }\n\n  newChallenge(challenge: Challenge): Observable<Challenge> {\n    return this.http.post<Challenge>(`${this.config.getOrigin()}/api/v1/ctfs/${challenge.ctfID}/challenges`, challenge);\n  }\n\n  updateChallenge(challenge: Challenge): Observable<Challenge> {\n    return this.http.put<Challenge>(`${this.config.getOrigin()}/api/v1/ctfs/${challenge.ctfID}/challenges/${challenge.id}`, challenge);\n  }\n\n  getChallenge(ctfID: string, id: string): Observable<Challenge> {\n    return this.http.get<Challenge>(`${this.config.getOrigin()}/api/v1/ctfs/${ctfID}/challenges/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}