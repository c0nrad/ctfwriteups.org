{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/newsletter.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction NewsletterComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \"Subscribed!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewsletterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \"Subscribed!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class NewsletterComponent {\n  constructor(newsletterService) {\n    this.newsletterService = newsletterService;\n    this.subscription = {};\n    this.isSubscribed = false;\n    this.errorMessage = \"\";\n  }\n  subscribe(subscription) {\n    this.newsletterService.subscribe(subscription.email).subscribe(subscription => {\n      this.isSubscribed = true;\n    }, err => {\n      // this.isSubscribed = true;\n      this.errorMessage = err.error.message;\n    });\n  }\n  static #_ = this.ɵfac = function NewsletterComponent_Factory(t) {\n    return new (t || NewsletterComponent)(i0.ɵɵdirectiveInject(i1.NewsletterService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewsletterComponent,\n    selectors: [[\"app-newsletter\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[1, \"container\", 2, \"padding-top\", \"65px\"], [1, \"mb-3\", \"input-group\"], [\"type\", \"email\", \"placeholder\", \"Email Address\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"text-success\", 4, \"ngIf\"], [\"class\", \"form-text\", 4, \"ngIf\"], [1, \"text-success\"], [1, \"form-text\"]],\n    template: function NewsletterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \"Newsletter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"Weekly email digest of the top voted CTF writeups + c0nrad's favorites.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"Sent out weekly on Wednesdays.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function NewsletterComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.subscription.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function NewsletterComponent_Template_button_click_9_listener() {\n          return ctx.subscribe(ctx.subscription);\n        });\n        i0.ɵɵtext(10, \"Subscribe\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, NewsletterComponent_div_11_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(12, NewsletterComponent_div_12_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.subscription.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubscribed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubscribed);\n      }\n    },\n    dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":";;;;;;IAeMA,8BAA+C;IAAAA,2BAAW;IAAAA,iBAAM;;;;;IAChEA,8BAA4C;IAAAA,2BAAW;IAAAA,iBAAM;;;AAKnE,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAJrC,iBAAY,GAA2B,EAA4B;IACnE,iBAAY,GAAG,KAAK;IACpB,iBAAY,GAAG,EAAE;EAE0C;EAE3DC,SAAS,CAACC,YAAoC;IAC5C,IAAI,CAACF,iBAAiB,CAACC,SAAS,CAACC,YAAY,CAACC,KAAK,CAAC,CAACF,SAAS,CAC3DC,YAAY,IAAI;MACf,IAAI,CAACE,YAAY,GAAG,IAAI;IAC1B,CAAC,EACAC,GAAG,IAAI;MACN;MACA,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACE,KAAK,CAACC,OAAO;IACvC,CAAC,CACF;EACH;EAAC;qBAjBUV,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAW;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QAf5BhB,8BAAgD;QAC1CA,0BAAU;QAAAA,iBAAK;QACnBA,yBAAG;QAAAA,uFAAuE;QAAAA,iBAAI;QAC9EA,yBAAG;QAAAA,8CAA8B;QAAAA,iBAAI;QAErCA,8BAA8B;QACyCA;UAAA;QAAA,EAAgC;QAArGA,iBAAwG;QACxGA,iCAAkE;QAAlCA;UAAA,OAASiB,+BAAuB;QAAA,EAAC;QAACjB,0BAAS;QAAAA,iBAAS;QAEtFA,sEAAgE;QAChEA,sEAA6D;QAC/DA,iBAAM;;;QALmEA,eAAgC;QAAhCA,gDAAgC;QAGjGA,eAAkB;QAAlBA,uCAAkB;QAClBA,eAAkB;QAAlBA,uCAAkB","names":["i0","NewsletterComponent","constructor","newsletterService","subscribe","subscription","email","isSubscribed","err","errorMessage","error","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/newsletter/newsletter.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { NewsletterService, NewsletterSubscription } from \"src/app/services/newsletter.service\";\n\n@Component({\n  selector: \"app-newsletter\",\n  template: `\n    <div class=\"container\" style=\"padding-top:65px\">\n      <h3>Newsletter</h3>\n      <p>Weekly email digest of the top voted CTF writeups + c0nrad's favorites.</p>\n      <p>Sent out weekly on Wednesdays.</p>\n\n      <div class=\"mb-3 input-group\">\n        <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" [(ngModel)]=\"subscription.email\" />\n        <button class=\"btn btn-primary\" (click)=\"subscribe(subscription)\">Subscribe</button>\n      </div>\n      <div *ngIf=\"isSubscribed\" class=\"text-success\">Subscribed!</div>\n      <div *ngIf=\"isSubscribed\" class=\"form-text\">Subscribed!</div>\n    </div>\n  `,\n  styles: [],\n})\nexport class NewsletterComponent {\n  subscription: NewsletterSubscription = {} as NewsletterSubscription;\n  isSubscribed = false;\n  errorMessage = \"\";\n\n  constructor(private newsletterService: NewsletterService) {}\n\n  subscribe(subscription: NewsletterSubscription) {\n    this.newsletterService.subscribe(subscription.email).subscribe(\n      (subscription) => {\n        this.isSubscribed = true;\n      },\n      (err) => {\n        // this.isSubscribed = true;\n        this.errorMessage = err.error.message;\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}