{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/writeup.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"src/app/services/user.service\";\nimport * as i5 from \"@angular/forms\";\nfunction WriteupEditComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function WriteupEditComponent_div_21_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const tag_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeTag(tag_r1));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", tag_r1, \" \");\n  }\n}\nexport class WriteupEditComponent {\n  constructor(route, writeupService, location, userService) {\n    this.route = route;\n    this.writeupService = writeupService;\n    this.location = location;\n    this.userService = userService;\n    this.writeup = {};\n    this.newTag = \"\";\n    this.me = {};\n  }\n  ngOnInit() {\n    this.userService.getMe().subscribe(me => {\n      this.me = me;\n      this.route.params.subscribe(params => {\n        if (params[\"id\"]) {\n          this.writeupService.getWriteup(params[\"id\"]).subscribe(writeup => {\n            this.writeup = writeup;\n          });\n        } else {\n          this.writeup.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n  removeTag(tag) {\n    if (!this.writeup.tags) {\n      this.writeup.tags = [];\n    }\n    this.writeup.tags = this.writeup.tags.filter(t => t !== tag);\n  }\n  addTag(tag) {\n    if (!this.writeup.tags) {\n      this.writeup.tags = [];\n    }\n    this.writeup.tags.push(tag);\n    this.newTag = \"\";\n  }\n  save() {\n    if (this.writeup.id) {\n      this.writeupService.updateWriteup(this.writeup).subscribe(() => {\n        this.location.go(`/writeups/${this.writeup.id}/edit`);\n      });\n    } else {\n      this.writeupService.newWriteup(this.writeup).subscribe(() => {\n        this.location.go(`/writeups/${this.writeup.id}/edit`);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function WriteupEditComponent_Factory(t) {\n    return new (t || WriteupEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.WriteupService), i0.ɵɵdirectiveInject(i3.Location), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WriteupEditComponent,\n    selectors: [[\"app-writeup-edit\"]],\n    decls: 26,\n    vars: 5,\n    consts: [[1, \"container\", 2, \"padding-top\", \"65px\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"placeholder\", \"Title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"URL\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"CTF Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-text\"], [\"type\", \"text\", \"placeholder\", \"Tags\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"class\", \"badge bg-secondary\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"badge\", \"bg-secondary\"], [\"tyle\", \"button\", 1, \"btn-close\", 3, \"click\"]],\n    template: function WriteupEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function WriteupEditComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.writeup.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 2);\n        i0.ɵɵtext(7, \"URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function WriteupEditComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.writeup.url = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 2);\n        i0.ɵɵtext(11, \"CTF \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function WriteupEditComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.writeup.ctfID = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵtext(14, \"Try to use an existing name, if it doesn't exist it will be created.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 2);\n        i0.ɵɵtext(17, \"Tags\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function WriteupEditComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.newTag = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function WriteupEditComponent_Template_button_click_19_listener() {\n          return ctx.addTag(ctx.newTag);\n        });\n        i0.ɵɵtext(20, \"Add Tag\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, WriteupEditComponent_div_21_Template, 3, 1, \"div\", 9);\n        i0.ɵɵelementStart(22, \"div\", 6);\n        i0.ɵɵtext(23, \"Tags are used for searching. \\\"XSS\\\", \\\"nodejs\\\", \\\"ROP\\\", etc.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function WriteupEditComponent_Template_button_click_24_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(25, \"Save\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.writeup.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.writeup.url);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.writeup.ctfID);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTag);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.writeup.tags);\n      }\n    },\n    dependencies: [i3.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","WriteupEditComponent","constructor","route","writeupService","location","userService","ngOnInit","getMe","subscribe","me","params","getWriteup","writeup","submitterID","id","removeTag","tag","tags","filter","t","addTag","push","newTag","save","updateWriteup","go","newWriteup","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/writeup-edit/writeup-edit.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User, UserService } from \"src/app/services/user.service\";\nimport { Writeup, WriteupService } from \"src/app/services/writeup.service\";\n\n@Component({\n  selector: \"app-writeup-edit\",\n  template: `\n    <div class=\"container\" style=\"padding-top:65px\">\n      <!-- <h3>{{ writeup.title }}</h3> -->\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Title</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Title\" [(ngModel)]=\"writeup.title\" />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">URL</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"URL\" [(ngModel)]=\"writeup.url\" />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">CTF </label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"writeup.ctfID\" />\n        <div class=\"form-text\">Try to use an existing name, if it doesn't exist it will be created.</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Tags</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Tags\" [(ngModel)]=\"newTag\" />\n        <button class=\"btn btn-secondary\" (click)=\"addTag(newTag)\">Add Tag</button>\n\n        <div *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeTag(tag)\"></button></div>\n\n        <div class=\"form-text\">Tags are used for searching. \"XSS\", \"nodejs\", \"ROP\", etc.</div>\n      </div>\n\n      <button class=\"btn btn-primary\" (click)=\"save()\">Save</button>\n    </div>\n  `,\n  styles: [],\n})\nexport class WriteupEditComponent {\n  writeup: Writeup = {} as Writeup;\n  newTag = \"\";\n\n  me: User = {} as User;\n\n  constructor(private route: ActivatedRoute, private writeupService: WriteupService, private location: Location, private userService: UserService) {}\n\n  ngOnInit() {\n    this.userService.getMe().subscribe((me) => {\n      this.me = me;\n\n      this.route.params.subscribe((params) => {\n        if (params[\"id\"]) {\n          this.writeupService.getWriteup(params[\"id\"]).subscribe((writeup) => {\n            this.writeup = writeup;\n          });\n        } else {\n          this.writeup.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n\n  removeTag(tag: string) {\n    if (!this.writeup.tags) {\n      this.writeup.tags = [];\n    }\n    this.writeup.tags = this.writeup.tags.filter((t) => t !== tag);\n  }\n\n  addTag(tag: string) {\n    if (!this.writeup.tags) {\n      this.writeup.tags = [];\n    }\n    this.writeup.tags.push(tag);\n    this.newTag = \"\";\n  }\n\n  save() {\n    if (this.writeup.id) {\n      this.writeupService.updateWriteup(this.writeup).subscribe(() => {\n        this.location.go(`/writeups/${this.writeup.id}/edit`);\n      });\n    } else {\n      this.writeupService.newWriteup(this.writeup).subscribe(() => {\n        this.location.go(`/writeups/${this.writeup.id}/edit`);\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}