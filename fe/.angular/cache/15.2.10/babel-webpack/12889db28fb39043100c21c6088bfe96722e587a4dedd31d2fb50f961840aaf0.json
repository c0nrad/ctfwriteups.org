{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nexport class CommentService {\n  constructor(http, config) {\n    this.http = http;\n    this.config = config;\n  }\n  getComments() {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/users/me/comments`);\n  }\n  newComment(comment) {\n    return this.http.post(`${this.config.getOrigin()}/api/v1/comments`, comment);\n  }\n  deleteComment(comment) {\n    return this.http.delete(`${this.config.getOrigin()}/api/v1/comments/${comment.id}`);\n  }\n  getCommentsForWriteup(writeupID) {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/writeups/${writeupID}/comments`);\n  }\n  static #_ = this.ɵfac = function CommentService_Factory(t) {\n    return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommentService,\n    factory: CommentService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;;AAqBA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAkB;EAEtEC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,2BAA2B,CAAC;EACxF;EAEAC,UAAU,CAACC,OAAgB;IACzB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAU,GAAG,IAAI,CAACN,MAAM,CAACG,SAAS,EAAE,kBAAkB,EAAEE,OAAO,CAAC;EACvF;EAEAE,aAAa,CAACF,OAAgB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACR,MAAM,CAACG,SAAS,EAAE,oBAAoBE,OAAO,CAACI,EAAE,EAAE,CAAC;EAC3F;EAEAC,qBAAqB,CAACC,SAAiB;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,oBAAoBQ,SAAS,WAAW,CAAC;EACrG;EAAC;qBAjBUd,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAe,SAAdf,cAAc;IAAAgB,YAFb;EAAM","names":["CommentService","constructor","http","config","getComments","get","getOrigin","newComment","comment","post","deleteComment","delete","id","getCommentsForWriteup","writeupID","factory","providedIn"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/services/comment.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ConfigService } from \"./config.service\";\n\nexport interface Comment {\n  id: string;\n  ts: number;\n\n  userID: string;\n\n  writeupID: string;\n  parentCommentID: string;\n\n  body: string;\n  votes: number;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CommentService {\n  constructor(private http: HttpClient, private config: ConfigService) {}\n\n  getComments(): Observable<Comment[]> {\n    return this.http.get<Comment[]>(`${this.config.getOrigin()}/api/v1/users/me/comments`);\n  }\n\n  newComment(comment: Comment): Observable<Comment> {\n    return this.http.post<Comment>(`${this.config.getOrigin()}/api/v1/comments`, comment);\n  }\n\n  deleteComment(comment: Comment): Observable<void> {\n    return this.http.delete<void>(`${this.config.getOrigin()}/api/v1/comments/${comment.id}`);\n  }\n\n  getCommentsForWriteup(writeupID: string): Observable<Comment[]> {\n    return this.http.get<Comment[]>(`${this.config.getOrigin()}/api/v1/writeups/${writeupID}/comments`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}