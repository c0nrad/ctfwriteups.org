{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { NavigationStart, NavigationError, NavigationEnd, NavigationCancel, RouterModule } from '@angular/router';\nimport * as i2 from '@ngx-loading-bar/core';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nlet LoadingBarRouterModule = /*#__PURE__*/(() => {\n  class LoadingBarRouterModule {\n    constructor(router, loader) {\n      const ref = loader.useRef('router');\n      router.events.subscribe(event => {\n        const navState = this.getCurrentNavigationState(router);\n        if (navState && navState.ignoreLoadingBar) {\n          return;\n        }\n        if (event instanceof NavigationStart) {\n          ref.start();\n        }\n        if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {\n          ref.complete();\n        }\n      });\n    }\n    getCurrentNavigationState(router) {\n      // `getCurrentNavigation` only available in angular `7.2`\n      const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n      if (currentNavigation && currentNavigation.extras) {\n        return currentNavigation.extras.state;\n      }\n      return {};\n    }\n  }\n  LoadingBarRouterModule.ɵfac = function LoadingBarRouterModule_Factory(t) {\n    return new (t || LoadingBarRouterModule)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.LoadingBarService));\n  };\n  LoadingBarRouterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: LoadingBarRouterModule\n  });\n  LoadingBarRouterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[RouterModule, LoadingBarModule], RouterModule, LoadingBarModule]\n  });\n  return LoadingBarRouterModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoadingBarRouterModule };\n//# sourceMappingURL=ngx-loading-bar-router.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}