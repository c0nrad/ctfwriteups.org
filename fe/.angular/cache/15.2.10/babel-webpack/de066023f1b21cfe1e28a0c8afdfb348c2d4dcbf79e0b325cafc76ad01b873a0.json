{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nexport class WriteupService {\n  constructor(http, config) {\n    this.http = http;\n    this.config = config;\n  }\n  getWriteups() {\n    return this.http.get(`${this.config.getOrigin()}/api/v1/writeups`);\n  }\n  static #_ = this.ɵfac = function WriteupService_Factory(t) {\n    return new (t || WriteupService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WriteupService,\n    factory: WriteupService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;;AAgDA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAkB;EAEtEC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE,kBAAkB,CAAC;EAC/E;EAAC;qBALUN,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAO,SAAdP,cAAc;IAAAQ,YAFb;EAAM","names":["WriteupService","constructor","http","config","getWriteups","get","getOrigin","factory","providedIn"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/services/writeup.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ConfigService } from \"./config.service\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\n\n// // type Writeup struct {\n// \tID primitive.ObjectID\n// \tTS time.Time\n\n// \tTitle string\n// \tURL   string\n// \tBody  string\n\n// \tAuthor    primitive.ObjectID\n// \tSubmitter primitive.ObjectID\n\n// \tVotes int\n\n// \tCTFName           string\n// \tChallengeCategory string\n// \tSolves            int\n// \tDifficulty        string\n// }\n\nexport interface Writeup {\n  id: string;\n  ts: number;\n\n  title: string;\n  url: string;\n  body: string;\n\n  //authorID: string\n  submitterID: string;\n\n  votes: number;\n\n  ctfName: string;\n  challengeCategory: string;\n  solves: number;\n  difficulty: string;\n\n  tags: string[];\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class WriteupService {\n  constructor(private http: HttpClient, private config: ConfigService) {}\n\n  getWriteups(): Observable<Writeup[]> {\n    return this.http.get<Writeup[]>(`${this.config.getOrigin()}/api/v1/writeups`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}