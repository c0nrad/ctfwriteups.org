{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet TopComponent = class TopComponent {\n  constructor(writeupService, location, voteService) {\n    this.writeupService = writeupService;\n    this.location = location;\n    this.voteService = voteService;\n    this.me = {};\n    this.writeups = [];\n    this.votes = [];\n  }\n  ngOnInit() {\n    this.writeupService.getWriteups().subscribe(writeups => {\n      this.writeups = writeups;\n    });\n    this.voteService.getVotes().subscribe(votes => {\n      this.votes = votes || [];\n    });\n  }\n  hasVoted(writeup) {\n    if (!this.votes) {}\n    return !!this.votes.find(v => v.writeupID === writeup.id);\n  }\n  addVote(writeup) {\n    const vote = {\n      id: \"\",\n      ts: Date.now(),\n      writeupID: writeup.id,\n      userID: this.me.id\n    };\n    this.voteService.newVote(vote).subscribe(_ => {\n      this.votes.push(vote);\n    });\n  }\n  removeVote(writeup) {\n    const vote = this.votes.find(v => v.writeupID === writeup.id);\n    if (!vote) {\n      return;\n    }\n    this.voteService.deleteVote(vote).subscribe(_ => {\n      this.votes = this.votes.filter(v => v.writeupID !== writeup.id);\n    });\n  }\n  getDomain(u) {\n    return new URL(u).hostname;\n  }\n};\nTopComponent = __decorate([Component({\n  selector: \"app-top\",\n  template: ` <div style=\"padding-top: 60px\" class=\"container\">\n    <!-- // drop down button select day, week, month, all time -->\n    <div class=\"btn-group float-end\">\n      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Week</button>\n      <ul class=\"dropdown-menu dropdown-menu-end\">\n        <li><a class=\"dropdown-item\" href=\"#\">Newest</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Day</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Week</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Month</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">All Time</a></li>\n      </ul>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div *ngFor=\"let writeup of writeups\" class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-1\">\n            <i *ngIf=\"!hasVoted(writeup)\" (click)=\"addVote(writeup)\"\" class=\"bi bi-arrow-up-square\"></i>\n            <i *ngIf=\"hasVoted(writeup)\" class=\"bi bi-arrow-up-square-fill\"></i>\n\n            {{ writeup.votes }}\n          </div>\n\n          <div class=\"col-md-1\">{{ writeup.ts | dateAgo }}</div>\n\n          <!-- <div class=\"col-md-6\">\n            <a href=\"{{ writeup.url }}\" target=\"_blank\"> {{ writeup.title }}</a>\n          </div> -->\n\n          <div class=\"col-md-3\">\n            <a [routerLink]=\"['/ctfs', writeup.ctfID, 'edit']\"> {{ writeup.ctfName }}</a>\n          </div>\n\n          <div class=\"col-md-4\">\n            <a href=\"{{ writeup.url }}\" target=\"_blank\"> {{ writeup.challengeCategory }} / {{ writeup.challengeName }}</a>\n            <span class=\"text-muted\" style=\"padding-left: 5px\">({{ getDomain(writeup.url) }})</span>\n          </div>\n\n          <div class=\"col-md-2\">\n            <div *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }}</div>\n          </div>\n          <div class=\"col-md-1\">\n            <button type=\"button\" class=\"btn btn-warning btn-sm float-end\" [routerLink]=\"['/writeups', writeup.id, 'edit']\">Edit</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`,\n  styles: []\n})], TopComponent);\nexport { TopComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAyDlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAoBC,cAA8B,EAAUC,QAAkB,EAAUC,WAAwB;IAA5F,mBAAc,GAAdF,cAAc;IAA0B,aAAQ,GAARC,QAAQ;IAAoB,gBAAW,GAAXC,WAAW;IAJnG,OAAE,GAAS,EAAU;IACrB,aAAQ,GAAc,EAAE;IACxB,UAAK,GAAW,EAAE;EAEiG;EAEnHC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,WAAW,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MACvD,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE,CAACF,SAAS,CAAEG,KAAK,IAAI;MAC9C,IAAI,CAACA,KAAK,GAAGA,KAAK,IAAI,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEAC,QAAQ,CAACC,OAAgB;IACvB,IAAI,CAAC,IAAI,CAACF,KAAK,EAAE;IAEjB,OAAO,CAAC,CAAC,IAAI,CAACA,KAAK,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,KAAKH,OAAO,CAACI,EAAE,CAAC;EAC7D;EAEAC,OAAO,CAACL,OAAgB;IACtB,MAAMM,IAAI,GAAS;MACjBF,EAAE,EAAE,EAAE;MACNG,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;MACdN,SAAS,EAAEH,OAAO,CAACI,EAAE;MACrBM,MAAM,EAAE,IAAI,CAACC,EAAE,CAACP;KACjB;IAED,IAAI,CAACZ,WAAW,CAACoB,OAAO,CAACN,IAAI,CAAC,CAACX,SAAS,CAAEkB,CAAC,IAAI;MAC7C,IAAI,CAACf,KAAK,CAACgB,IAAI,CAACR,IAAI,CAAC;IACvB,CAAC,CAAC;EACJ;EAEAS,UAAU,CAACf,OAAgB;IACzB,MAAMM,IAAI,GAAG,IAAI,CAACR,KAAK,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,KAAKH,OAAO,CAACI,EAAE,CAAC;IAC/D,IAAI,CAACE,IAAI,EAAE;MACT;;IAGF,IAAI,CAACd,WAAW,CAACwB,UAAU,CAACV,IAAI,CAAC,CAACX,SAAS,CAAEkB,CAAC,IAAI;MAChD,IAAI,CAACf,KAAK,GAAG,IAAI,CAACA,KAAK,CAACmB,MAAM,CAAEf,CAAC,IAAKA,CAAC,CAACC,SAAS,KAAKH,OAAO,CAACI,EAAE,CAAC;IACnE,CAAC,CAAC;EACJ;EAEAc,SAAS,CAACC,CAAS;IACjB,OAAO,IAAIC,GAAG,CAACD,CAAC,CAAC,CAACE,QAAQ;EAC5B;CACD;AAlDYjC,YAAY,eApDxBD,SAAS,CAAC;EACTmC,QAAQ,EAAE,SAAS;EACnBC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA+CH;EACPC,MAAM,EAAE;CACT,CAAC,GACWpC,YAAY,CAkDxB;SAlDYA,YAAY","names":["Component","TopComponent","constructor","writeupService","location","voteService","ngOnInit","getWriteups","subscribe","writeups","getVotes","votes","hasVoted","writeup","find","v","writeupID","id","addVote","vote","ts","Date","now","userID","me","newVote","_","push","removeVote","deleteVote","filter","getDomain","u","URL","hostname","selector","template","styles"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/top/top.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { User } from \"src/app/services/user.service\";\nimport { Vote, VoteService } from \"src/app/services/vote.service\";\nimport { Writeup, WriteupService } from \"src/app/services/writeup.service\";\n\n@Component({\n  selector: \"app-top\",\n  template: ` <div style=\"padding-top: 60px\" class=\"container\">\n    <!-- // drop down button select day, week, month, all time -->\n    <div class=\"btn-group float-end\">\n      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Week</button>\n      <ul class=\"dropdown-menu dropdown-menu-end\">\n        <li><a class=\"dropdown-item\" href=\"#\">Newest</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Day</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Week</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Month</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">All Time</a></li>\n      </ul>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div *ngFor=\"let writeup of writeups\" class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-1\">\n            <i *ngIf=\"!hasVoted(writeup)\" (click)=\"addVote(writeup)\"\" class=\"bi bi-arrow-up-square\"></i>\n            <i *ngIf=\"hasVoted(writeup)\" class=\"bi bi-arrow-up-square-fill\"></i>\n\n            {{ writeup.votes }}\n          </div>\n\n          <div class=\"col-md-1\">{{ writeup.ts | dateAgo }}</div>\n\n          <!-- <div class=\"col-md-6\">\n            <a href=\"{{ writeup.url }}\" target=\"_blank\"> {{ writeup.title }}</a>\n          </div> -->\n\n          <div class=\"col-md-3\">\n            <a [routerLink]=\"['/ctfs', writeup.ctfID, 'edit']\"> {{ writeup.ctfName }}</a>\n          </div>\n\n          <div class=\"col-md-4\">\n            <a href=\"{{ writeup.url }}\" target=\"_blank\"> {{ writeup.challengeCategory }} / {{ writeup.challengeName }}</a>\n            <span class=\"text-muted\" style=\"padding-left: 5px\">({{ getDomain(writeup.url) }})</span>\n          </div>\n\n          <div class=\"col-md-2\">\n            <div *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }}</div>\n          </div>\n          <div class=\"col-md-1\">\n            <button type=\"button\" class=\"btn btn-warning btn-sm float-end\" [routerLink]=\"['/writeups', writeup.id, 'edit']\">Edit</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`,\n  styles: [],\n})\nexport class TopComponent {\n  me: User = {} as User;\n  writeups: Writeup[] = [];\n  votes: Vote[] = [];\n\n  constructor(private writeupService: WriteupService, private location: Location, private voteService: VoteService) {}\n\n  ngOnInit(): void {\n    this.writeupService.getWriteups().subscribe((writeups) => {\n      this.writeups = writeups;\n    });\n\n    this.voteService.getVotes().subscribe((votes) => {\n      this.votes = votes || [];\n    });\n  }\n\n  hasVoted(writeup: Writeup): boolean {\n    if (!this.votes) {\n    }\n    return !!this.votes.find((v) => v.writeupID === writeup.id);\n  }\n\n  addVote(writeup: Writeup): void {\n    const vote: Vote = {\n      id: \"\",\n      ts: Date.now(),\n      writeupID: writeup.id,\n      userID: this.me.id,\n    };\n\n    this.voteService.newVote(vote).subscribe((_) => {\n      this.votes.push(vote);\n    });\n  }\n\n  removeVote(writeup: Writeup): void {\n    const vote = this.votes.find((v) => v.writeupID === writeup.id);\n    if (!vote) {\n      return;\n    }\n\n    this.voteService.deleteVote(vote).subscribe((_) => {\n      this.votes = this.votes.filter((v) => v.writeupID !== writeup.id);\n    });\n  }\n\n  getDomain(u: string): string {\n    return new URL(u).hostname;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}