{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet CtfListComponent = class CtfListComponent {\n  constructor(ctfService, location, userService) {\n    this.ctfService = ctfService;\n    this.location = location;\n    this.userService = userService;\n    this.ctfs = [];\n    this.me = {};\n  }\n  ngOnInit() {\n    this.ctfService.getCTFs().subscribe(ctfs => {\n      this.ctfs = ctfs;\n    });\n    this.userService.getMe().subscribe(me => {\n      this.me = me;\n    });\n  }\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n};\nCtfListComponent = __decorate([Component({\n  selector: \"app-ctf-list\",\n  template: `<div class=\"container\" style=\"padding-top: 65px\">\n    <a *ngIf=\"me.id\" class=\"btn btn-primary\" [routerLink]=\"['ctfs', 'new']>New CTF</a>\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Challenge Count</th>\n          <th>Writeup Count</th>\n          <th>End Date</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr *ngFor=\"let ctf of ctfs\">\n          <td>\n            <a [routerLink]=\"['/ctfs', ctf.id, 'edit']\">{{ ctf.name }}</a>\n          </td>\n          <td>{{ ctf.challengeCount }}</td>\n          <td>{{ ctf.writeupCount }}</td>\n          <td>{{ ctf.endDate * 1000 | date }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- {{ ctfs }} -->\n  </div>`,\n  styles: []\n})], CtfListComponent);\nexport { CtfListComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAmClC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAoBC,UAAsB,EAAUC,QAAkB,EAAUC,WAAwB;IAApF,eAAU,GAAVF,UAAU;IAAsB,aAAQ,GAARC,QAAQ;IAAoB,gBAAW,GAAXC,WAAW;IAH3F,SAAI,GAAU,EAAE;IAChB,OAAE,GAAS,EAAU;EAEsF;EAE3GC,QAAQ;IACN,IAAI,CAACH,UAAU,CAACI,OAAO,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC3C,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;IAEF,IAAI,CAACJ,WAAW,CAACK,KAAK,EAAE,CAACF,SAAS,CAAEG,EAAE,IAAI;MACxC,IAAI,CAACA,EAAE,GAAGA,EAAE;IACd,CAAC,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,CAACR,QAAQ,CAACS,EAAE,CAAC,WAAW,CAAC;EAC/B;CACD;AAnBYZ,gBAAgB,eA/B5BD,SAAS,CAAC;EACTc,QAAQ,EAAE,cAAc;EACxBC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;SA0BH;EACPC,MAAM,EAAE;CACT,CAAC,GACWf,gBAAgB,CAmB5B;SAnBYA,gBAAgB","names":["Component","CtfListComponent","constructor","ctfService","location","userService","ngOnInit","getCTFs","subscribe","ctfs","getMe","me","newCTF","go","selector","template","styles"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/ctf-list/ctf-list.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { CTF, CTFService } from \"src/app/services/ctf.service\";\nimport { User, UserService } from \"src/app/services/user.service\";\n\n@Component({\n  selector: \"app-ctf-list\",\n  template: `<div class=\"container\" style=\"padding-top: 65px\">\n    <a *ngIf=\"me.id\" class=\"btn btn-primary\" [routerLink]=\"['ctfs', 'new']>New CTF</a>\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Challenge Count</th>\n          <th>Writeup Count</th>\n          <th>End Date</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr *ngFor=\"let ctf of ctfs\">\n          <td>\n            <a [routerLink]=\"['/ctfs', ctf.id, 'edit']\">{{ ctf.name }}</a>\n          </td>\n          <td>{{ ctf.challengeCount }}</td>\n          <td>{{ ctf.writeupCount }}</td>\n          <td>{{ ctf.endDate * 1000 | date }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- {{ ctfs }} -->\n  </div>`,\n  styles: [],\n})\nexport class CtfListComponent {\n  ctfs: CTF[] = [];\n  me: User = {} as User;\n\n  constructor(private ctfService: CTFService, private location: Location, private userService: UserService) {}\n\n  ngOnInit() {\n    this.ctfService.getCTFs().subscribe((ctfs) => {\n      this.ctfs = ctfs;\n    });\n\n    this.userService.getMe().subscribe((me) => {\n      this.me = me;\n    });\n  }\n\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}