{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet TopComponent = class TopComponent {\n  constructor(writeupService, location) {\n    this.writeupService = writeupService;\n    this.location = location;\n    this.me = {};\n    this.writeups = [];\n  }\n  ngOnInit() {\n    this.writeupService.getWriteups().subscribe(writeups => {\n      this.writeups = writeups;\n    });\n  }\n  newWriteup() {\n    // this.location.go(`/writeup/${writeup.id}/edit`);\n  }\n  getDomain(u) {\n    return new URL(u).hostname;\n  }\n};\nTopComponent = __decorate([Component({\n  selector: \"app-top\",\n  template: ` <div style=\"padding-top: 60px\" class=\"container\">\n    <!-- // drop down button select day, week, month, all time -->\n    <div class=\"btn-group float-end\">\n      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Week</button>\n      <ul class=\"dropdown-menu dropdown-menu-end\">\n        <li><a class=\"dropdown-item\" href=\"#\">Newest</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Day</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Week</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Month</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">All Time</a></li>\n      </ul>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div *ngFor=\"let writeup of writeups\" class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-1\"><i class=\"bi bi-arrow-up-square\"></i> 0</div>\n\n          <!-- <div class=\"col-md-6\">\n            <a href=\"{{ writeup.url }}\" target=\"_blank\"> {{ writeup.title }}</a>\n          </div> -->\n\n          <div class=\"col-md-3\">\n            <a [routerLink]=\"['/ctfs', {{writeup.ctfID}}, 'edit']\"> {{ writeup.ctfName }}</a>\n          </div>\n\n          <div class=\"col-md-5\">\n            <a href=\"{{ writeup.url }}\" target=\"_blank\"> {{ writeup.challengeCategory }} / {{ writeup.challengeName }}</a>\n            <span class=\"text-muted\" style=\"padding-left: 5px\">({{ getDomain(writeup.url) }})</span>\n          </div>\n\n          <div class=\"col-md-2\">\n            <div *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }}</div>\n          </div>\n          <div class=\"col-md-1\">\n            <button type=\"button\" class=\"btn btn-warning btn-sm float-end\" [routerLink]=\"['/writeups', writeup.id, 'edit']\">Edit</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`,\n  styles: []\n})], TopComponent);\nexport { TopComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAiDlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIvBC,YAAoBC,cAA8B,EAAUC,QAAkB;IAA1D,mBAAc,GAAdD,cAAc;IAA0B,aAAQ,GAARC,QAAQ;IAHpE,OAAE,GAAS,EAAU;IACrB,aAAQ,GAAc,EAAE;EAEyD;EAEjFC,QAAQ;IACN,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MACvD,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;EACJ;EAEAC,UAAU;IACR;EAAA;EAGFC,SAAS,CAACC,CAAS;IACjB,OAAO,IAAIC,GAAG,CAACD,CAAC,CAAC,CAACE,QAAQ;EAC5B;CACD;AAnBYZ,YAAY,eA7CxBD,SAAS,CAAC;EACTc,QAAQ,EAAE,SAAS;EACnBC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAwCH;EACPC,MAAM,EAAE;CACT,CAAC,GACWf,YAAY,CAmBxB;SAnBYA,YAAY","names":["Component","TopComponent","constructor","writeupService","location","ngOnInit","getWriteups","subscribe","writeups","newWriteup","getDomain","u","URL","hostname","selector","template","styles"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/top/top.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { User } from \"src/app/services/user.service\";\nimport { Writeup, WriteupService } from \"src/app/services/writeup.service\";\n\n@Component({\n  selector: \"app-top\",\n  template: ` <div style=\"padding-top: 60px\" class=\"container\">\n    <!-- // drop down button select day, week, month, all time -->\n    <div class=\"btn-group float-end\">\n      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Week</button>\n      <ul class=\"dropdown-menu dropdown-menu-end\">\n        <li><a class=\"dropdown-item\" href=\"#\">Newest</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Day</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Week</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">Month</a></li>\n        <li><a class=\"dropdown-item\" href=\"#\">All Time</a></li>\n      </ul>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div *ngFor=\"let writeup of writeups\" class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-1\"><i class=\"bi bi-arrow-up-square\"></i> 0</div>\n\n          <!-- <div class=\"col-md-6\">\n            <a href=\"{{ writeup.url }}\" target=\"_blank\"> {{ writeup.title }}</a>\n          </div> -->\n\n          <div class=\"col-md-3\">\n            <a [routerLink]=\"['/ctfs', {{writeup.ctfID}}, 'edit']\"> {{ writeup.ctfName }}</a>\n          </div>\n\n          <div class=\"col-md-5\">\n            <a href=\"{{ writeup.url }}\" target=\"_blank\"> {{ writeup.challengeCategory }} / {{ writeup.challengeName }}</a>\n            <span class=\"text-muted\" style=\"padding-left: 5px\">({{ getDomain(writeup.url) }})</span>\n          </div>\n\n          <div class=\"col-md-2\">\n            <div *ngFor=\"let tag of writeup.tags\" class=\"badge bg-secondary\">{{ tag }}</div>\n          </div>\n          <div class=\"col-md-1\">\n            <button type=\"button\" class=\"btn btn-warning btn-sm float-end\" [routerLink]=\"['/writeups', writeup.id, 'edit']\">Edit</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`,\n  styles: [],\n})\nexport class TopComponent {\n  me: User = {} as User;\n  writeups: Writeup[] = [];\n\n  constructor(private writeupService: WriteupService, private location: Location) {}\n\n  ngOnInit(): void {\n    this.writeupService.getWriteups().subscribe((writeups) => {\n      this.writeups = writeups;\n    });\n  }\n\n  newWriteup(): void {\n    // this.location.go(`/writeup/${writeup.id}/edit`);\n  }\n\n  getDomain(u: string): string {\n    return new URL(u).hostname;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}