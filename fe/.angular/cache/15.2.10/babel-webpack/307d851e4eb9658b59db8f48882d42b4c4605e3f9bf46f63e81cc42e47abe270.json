{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet CtfEditComponent = class CtfEditComponent {\n  constructor(route, ctfService, location, userService, writeupService, voteService, challengeService) {\n    this.route = route;\n    this.ctfService = ctfService;\n    this.location = location;\n    this.userService = userService;\n    this.writeupService = writeupService;\n    this.voteService = voteService;\n    this.challengeService = challengeService;\n    this.ctf = {};\n    this.me = {};\n    this.newCategory = \"\";\n    this.newCategoryChallenge = {};\n    this.newChallengeWriteupURL = {};\n    this.newTag = \"\";\n    this.challenges = [];\n    this.writeups = [];\n    this.votes = [];\n  }\n  ngOnInit() {\n    this.userService.getMe().subscribe(me => {\n      this.me = me;\n    });\n    this.voteService.getVotes().subscribe(votes => {\n      this.votes = votes || [];\n    });\n    this.route.params.subscribe(params => {\n      if (params[\"id\"]) {\n        this.ctfService.getCTF(params[\"id\"]).subscribe(ctf => {\n          this.ctf = ctf;\n          for (let category of this.ctf.categories) {\n            this.newCategoryChallenge[category] = {\n              ctfID: this.ctf.id,\n              category: category\n            };\n          }\n        });\n        this.challengeService.getChallenges(params[\"id\"]).subscribe(challenges => {\n          this.challenges = challenges;\n          this.newChallengeWriteupURL = {};\n          for (let challenge of this.challenges) {\n            this.newChallengeWriteupURL[challenge.id] = \"\";\n          }\n        });\n        this.writeupService.getWriteupsForCTF(params[\"id\"]).subscribe(writeups => {\n          this.writeups = writeups || [];\n        });\n      } else {\n        this.ctf.submitterID = this.me.id;\n      }\n    });\n  }\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n  save() {\n    if (this.ctf.id) {\n      this.ctfService.updateCTF(this.ctf).subscribe(() => {\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    } else {\n      this.ctfService.newCTF(this.ctf).subscribe(ctf => {\n        this.ctf = ctf;\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    }\n  }\n  removeCategory(category) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories = this.ctf.categories.filter(t => t !== category);\n  }\n  addCategory(category) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories.push(category);\n    this.newCategory = \"\";\n    this.newCategoryChallenge[category] = {\n      ctfID: this.ctf.id,\n      category: category\n    };\n    this.save();\n  }\n  saveChallenge(category) {\n    this.challengeService.newChallenge(this.newCategoryChallenge[category]).subscribe(challenge => {\n      this.challenges.push(challenge);\n      this.newCategoryChallenge[category] = {\n        ctfID: this.ctf.id,\n        category: category\n      };\n    });\n  }\n  updateChallenge(challenge) {\n    this.challengeService.updateChallenge(challenge).subscribe(() => {\n      challenge.isEditMode = false;\n    });\n  }\n  deleteChallenge(challenge) {\n    this.challengeService.deleteChallenge(challenge).subscribe(() => {\n      this.challenges = this.challenges.filter(c => c.id !== challenge.id);\n    });\n  }\n  deleteWriteup(writeup) {\n    this.writeupService.deleteWriteup(writeup).subscribe(() => {\n      this.writeups = this.writeups.filter(w => w.id !== writeup.id);\n    });\n  }\n  filterChallenges(category) {\n    if (this.challenges == null) {\n      return [];\n    }\n    return this.challenges.filter(challenge => challenge.category === category).sort((a, b) => b.solves - a.solves);\n  }\n  filterWriteups(challengeID) {\n    if (this.writeups == null) {\n      return [];\n    }\n    return this.writeups.filter(writeup => writeup.challengeID === challengeID).sort((a, b) => b.voteCount - a.voteCount);\n  }\n  saveWriteup(challenge, url) {\n    this.writeupService.newWriteup({\n      challengeID: challenge.id,\n      challengeName: challenge.name,\n      challengeCategory: challenge.category,\n      ctfName: this.ctf.name,\n      url: url,\n      ctfID: this.ctf.id,\n      submitterID: this.me.id\n    }).subscribe(writeup => {\n      this.writeups.push(writeup);\n      this.newChallengeWriteupURL[challenge.id] = \"\";\n    });\n  }\n  hasVoted(writeup) {\n    if (!this.votes) {}\n    return !!this.votes.find(v => v.writeupID === writeup.id);\n  }\n  getVote(writeup) {\n    return this.votes.find(v => v.writeupID === writeup.id);\n  }\n  addVote(writeup) {\n    const vote = {\n      writeupID: writeup.id,\n      userID: this.me.id\n    };\n    this.voteService.newVote(vote).subscribe(v => {\n      this.votes.push(v);\n      writeup.voteCount++;\n    });\n  }\n  removeVote(vote, writeup) {\n    console.log(\"remove vote\", vote);\n    this.voteService.deleteVote(vote).subscribe(_ => {\n      this.votes = this.votes.filter(v => vote.id !== v.id);\n      writeup.voteCount--;\n    });\n  }\n  removeTag(challenge, tag) {\n    challenge.tags = challenge.tags.filter(t => t !== tag);\n    this.challengeService.updateChallenge(challenge).subscribe(c => {\n      challenge = c;\n    });\n  }\n  addTag(challenge, tag) {\n    if (!challenge.tags) {\n      challenge.tags = [];\n    }\n    challenge.tags.push(tag);\n    this.newTag = \"\";\n    this.challengeService.updateChallenge(challenge).subscribe(c => {\n      challenge = c;\n    });\n  }\n};\nCtfEditComponent = __decorate([Component({\n  selector: \"app-ctf-edit\",\n  template: `<div class=\"container\" style=\"padding-top: 65px\">\n    <div class=\"mb-3\" *ngIf=\"me.isAdmin\">\n      <label class=\"form-label\">CTF Name</label>\n\n      <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"ctf.name\" />\n      </div>\n\n      <div>\n        <label class=\"form-label\">CTF URL</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"CTF URL\" [(ngModel)]=\"ctf.url\" />\n      </div>\n\n      <div>\n        <label>CTF End Date</label>\n        <input type=\"number\" class=\"form-control\" placeholder=\"CTF End Date\" [(ngModel)]=\"ctf.endDate\" />\n      </div>\n\n      <button *ngIf=\"me.isAdmin\" (click)=\"save()\" class=\"btn btn-primary\">Save</button>\n\n      <div *ngIf=\"!me.isAdmin\">\n        <h2>{{ ctf.name }}</h2>\n      </div>\n</div>\n\n      <!-- <div *ngFor=\"let category of ctf.categories\" class=\"badge bg-secondary\">{{ category }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeCategory(category)\"></button></div> -->\n\n      <div *ngFor=\"let category of ctf.categories\">\n        <h3>{{ category }}</h3>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"row\" class=\"col-2\">Challenge Name</th>\n              <th scope=\"row\" class=\"col-1\">Solves</th>\n              <th scope=\"row\" class=\"col-3\">Short Solution Description / Tags</th>\n              <th scope=\"row\" class=\"col-6\">Writeups</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr *ngFor=\"let challenge of filterChallenges(category)\">\n              <td>\n                <p *ngIf=\"!challenge.isEditMode\">{{ challenge.name }}</p>\n                <input *ngIf=\"challenge.isEditMode\" type=\"text\" class=\"form-control\" placeholder=\"Challenge Name\" [(ngModel)]=\"challenge.name\" />\n                <button *ngIf=\"me.isAdmin\" class=\"btn btn-danger btn-sm\" (click)=\"deleteChallenge(challenge)\">Delete</button>\n                <button *ngIf=\"!challenge.isEditMode && !!me.id\" class=\"btn btn-warning btn-sm\" (click)=\"challenge.isEditMode = true\">Edit</button>\n                <button *ngIf=\"challenge.isEditMode\" class=\"btn btn-warning btn-sm\" (click)=\"updateChallenge(challenge)\">Save</button>\n              </td>\n              <td>\n                <p *ngIf=\"!challenge.isEditMode\">{{ challenge.solves }}</p>\n                <input *ngIf=\"challenge.isEditMode\" type=\"number\" class=\"form-control\" placeholder=\"Solves\" [(ngModel)]=\"challenge.solves\" />\n              </td>\n              <td>\n                <p *ngIf=\"!challenge.isEditMode\">{{ challenge.shortDescription }}</p>\n                <input *ngIf=\"challenge.isEditMode\" type=\"text\" class=\"form-control\" placeholder=\"Short Description\" [(ngModel)]=\"challenge.shortDescription\" />\n\n                <!-- tags -->\n                <div>\n                  <span *ngFor=\"let tag of challenge.tags\" class=\"badge bg-secondary me-1\"\n                    >{{ tag }} <button *ngIf=\"challenge.isEditMode\" class=\"btn-close\" (click)=\"removeTag(challenge, tag)\"></button\n                  ></span>\n                </div>\n                <div *ngIf=\"challenge.isEditMode\" class=\"input-group mb-3\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"New Tag\" [(ngModel)]=\"newTag\" />\n                  <button class=\"btn btn-secondary\" (click)=\"addTag(challenge, newTag)\">Add Tag</button>\n                </div>\n              </td>\n              <td>\n                <ul>\n                  <li *ngFor=\"let writeup of filterWriteups(challenge.id)\">\n                    <i *ngIf=\"!hasVoted(writeup)\" (click)=\"addVote(writeup)\" class=\"bi bi-heart\" style=\"  vertical-align: 0em;\"></i>\n                    <i *ngIf=\"hasVoted(writeup)\" (click)=\"removeVote(getVote(writeup)!, writeup)\" class=\"bi bi-heart-fill text-danger\" style=\"\"></i>\n\n                    {{ writeup.voteCount }}\n\n                    <a href=\"{{ writeup.url }}\" rel=\"noopener noreferrer\" target=\"_blank\">{{ writeup.url }}</a>\n\n                    <button *ngIf=\"me.isAdmin || writeup.submitterID == me.id\" class=\"btn btn-danger btn-sm\" (click)=\"deleteWriteup(writeup)\">Delete</button>\n                  </li>\n                </ul>\n                <div class=\"input-group\" *ngIf=\"!!me.id\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Writeup URL\" [(ngModel)]=\"newChallengeWriteupURL[challenge.id]\" />\n                  <button class=\"btn btn-secondary btn-sm\" (click)=\"saveWriteup(challenge, newChallengeWriteupURL[challenge.id])\">Add Writeup</button>\n                </div>\n              </td>\n            </tr>\n\n            <tr *ngIf=\"me.isAdmin\">\n              <td>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Challenge Name\" [(ngModel)]=\"newCategoryChallenge[category].name\" />\n              </td>\n              <td>\n                <input type=\"number\" class=\"form-control\" placeholder=\"Solves\" [(ngModel)]=\"newCategoryChallenge[category].solves\" />\n              </td>\n\n              <td>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Short Description\" [(ngModel)]=\"newCategoryChallenge[category].shortDescription\" />\n              </td>\n\n              <td>\n                <button class=\"btn btn-primary btn-sm\" (click)=\"saveChallenge(category)\">Save New Challenge</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div *ngIf=\"me.isAdmin\" class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"New Category\" [(ngModel)]=\"newCategory\" />\n        <button class=\"btn btn-secondary\" (click)=\"addCategory(newCategory)\">Add Category</button>\n      </div>\n    </div>\n    <!-- ji -->\n  </div>`,\n  styles: []\n})], CtfEditComponent);\nexport { CtfEditComponent };","map":{"version":3,"mappings":"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","names":["Component","CtfEditComponent","constructor","route","ctfService","location","userService","writeupService","voteService","challengeService","ngOnInit","getMe","subscribe","me","getVotes","votes","params","getCTF","ctf","category","categories","newCategoryChallenge","ctfID","id","getChallenges","challenges","newChallengeWriteupURL","challenge","getWriteupsForCTF","writeups","submitterID","newCTF","go","save","updateCTF","removeCategory","filter","t","addCategory","push","newCategory","saveChallenge","newChallenge","updateChallenge","isEditMode","deleteChallenge","c","deleteWriteup","writeup","w","filterChallenges","sort","a","b","solves","filterWriteups","challengeID","voteCount","saveWriteup","url","newWriteup","challengeName","name","challengeCategory","ctfName","hasVoted","find","v","writeupID","getVote","addVote","vote","userID","newVote","removeVote","console","log","deleteVote","_","removeTag","tag","tags","addTag","newTag","selector","template","styles"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/ctf-edit/ctf-edit.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Challenge, ChallengeService } from \"src/app/services/challenge.service\";\nimport { CTF, CTFService } from \"src/app/services/ctf.service\";\nimport { User, UserService } from \"src/app/services/user.service\";\nimport { Vote, VoteService } from \"src/app/services/vote.service\";\nimport { Writeup, WriteupService } from \"src/app/services/writeup.service\";\n\n@Component({\n  selector: \"app-ctf-edit\",\n  template: `<div class=\"container\" style=\"padding-top: 65px\">\n    <div class=\"mb-3\" *ngIf=\"me.isAdmin\">\n      <label class=\"form-label\">CTF Name</label>\n\n      <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"ctf.name\" />\n      </div>\n\n      <div>\n        <label class=\"form-label\">CTF URL</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"CTF URL\" [(ngModel)]=\"ctf.url\" />\n      </div>\n\n      <div>\n        <label>CTF End Date</label>\n        <input type=\"number\" class=\"form-control\" placeholder=\"CTF End Date\" [(ngModel)]=\"ctf.endDate\" />\n      </div>\n\n      <button *ngIf=\"me.isAdmin\" (click)=\"save()\" class=\"btn btn-primary\">Save</button>\n\n      <div *ngIf=\"!me.isAdmin\">\n        <h2>{{ ctf.name }}</h2>\n      </div>\n</div>\n\n      <!-- <div *ngFor=\"let category of ctf.categories\" class=\"badge bg-secondary\">{{ category }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeCategory(category)\"></button></div> -->\n\n      <div *ngFor=\"let category of ctf.categories\">\n        <h3>{{ category }}</h3>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"row\" class=\"col-2\">Challenge Name</th>\n              <th scope=\"row\" class=\"col-1\">Solves</th>\n              <th scope=\"row\" class=\"col-3\">Short Solution Description / Tags</th>\n              <th scope=\"row\" class=\"col-6\">Writeups</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr *ngFor=\"let challenge of filterChallenges(category)\">\n              <td>\n                <p *ngIf=\"!challenge.isEditMode\">{{ challenge.name }}</p>\n                <input *ngIf=\"challenge.isEditMode\" type=\"text\" class=\"form-control\" placeholder=\"Challenge Name\" [(ngModel)]=\"challenge.name\" />\n                <button *ngIf=\"me.isAdmin\" class=\"btn btn-danger btn-sm\" (click)=\"deleteChallenge(challenge)\">Delete</button>\n                <button *ngIf=\"!challenge.isEditMode && !!me.id\" class=\"btn btn-warning btn-sm\" (click)=\"challenge.isEditMode = true\">Edit</button>\n                <button *ngIf=\"challenge.isEditMode\" class=\"btn btn-warning btn-sm\" (click)=\"updateChallenge(challenge)\">Save</button>\n              </td>\n              <td>\n                <p *ngIf=\"!challenge.isEditMode\">{{ challenge.solves }}</p>\n                <input *ngIf=\"challenge.isEditMode\" type=\"number\" class=\"form-control\" placeholder=\"Solves\" [(ngModel)]=\"challenge.solves\" />\n              </td>\n              <td>\n                <p *ngIf=\"!challenge.isEditMode\">{{ challenge.shortDescription }}</p>\n                <input *ngIf=\"challenge.isEditMode\" type=\"text\" class=\"form-control\" placeholder=\"Short Description\" [(ngModel)]=\"challenge.shortDescription\" />\n\n                <!-- tags -->\n                <div>\n                  <span *ngFor=\"let tag of challenge.tags\" class=\"badge bg-secondary me-1\"\n                    >{{ tag }} <button *ngIf=\"challenge.isEditMode\" class=\"btn-close\" (click)=\"removeTag(challenge, tag)\"></button\n                  ></span>\n                </div>\n                <div *ngIf=\"challenge.isEditMode\" class=\"input-group mb-3\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"New Tag\" [(ngModel)]=\"newTag\" />\n                  <button class=\"btn btn-secondary\" (click)=\"addTag(challenge, newTag)\">Add Tag</button>\n                </div>\n              </td>\n              <td>\n                <ul>\n                  <li *ngFor=\"let writeup of filterWriteups(challenge.id)\">\n                    <i *ngIf=\"!hasVoted(writeup)\" (click)=\"addVote(writeup)\" class=\"bi bi-heart\" style=\"  vertical-align: 0em;\"></i>\n                    <i *ngIf=\"hasVoted(writeup)\" (click)=\"removeVote(getVote(writeup)!, writeup)\" class=\"bi bi-heart-fill text-danger\" style=\"\"></i>\n\n                    {{ writeup.voteCount }}\n\n                    <a href=\"{{ writeup.url }}\" rel=\"noopener noreferrer\" target=\"_blank\">{{ writeup.url }}</a>\n\n                    <button *ngIf=\"me.isAdmin || writeup.submitterID == me.id\" class=\"btn btn-danger btn-sm\" (click)=\"deleteWriteup(writeup)\">Delete</button>\n                  </li>\n                </ul>\n                <div class=\"input-group\" *ngIf=\"!!me.id\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Writeup URL\" [(ngModel)]=\"newChallengeWriteupURL[challenge.id]\" />\n                  <button class=\"btn btn-secondary btn-sm\" (click)=\"saveWriteup(challenge, newChallengeWriteupURL[challenge.id])\">Add Writeup</button>\n                </div>\n              </td>\n            </tr>\n\n            <tr *ngIf=\"me.isAdmin\">\n              <td>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Challenge Name\" [(ngModel)]=\"newCategoryChallenge[category].name\" />\n              </td>\n              <td>\n                <input type=\"number\" class=\"form-control\" placeholder=\"Solves\" [(ngModel)]=\"newCategoryChallenge[category].solves\" />\n              </td>\n\n              <td>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Short Description\" [(ngModel)]=\"newCategoryChallenge[category].shortDescription\" />\n              </td>\n\n              <td>\n                <button class=\"btn btn-primary btn-sm\" (click)=\"saveChallenge(category)\">Save New Challenge</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div *ngIf=\"me.isAdmin\" class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"New Category\" [(ngModel)]=\"newCategory\" />\n        <button class=\"btn btn-secondary\" (click)=\"addCategory(newCategory)\">Add Category</button>\n      </div>\n    </div>\n    <!-- ji -->\n  </div>`,\n  styles: [],\n})\nexport class CtfEditComponent {\n  ctf: CTF = {} as CTF;\n  me: User = {} as User;\n  newCategory = \"\";\n  newCategoryChallenge: { [key: string]: Challenge } = {};\n  newChallengeWriteupURL: { [key: string]: string } = {};\n  newTag = \"\";\n\n  challenges: Challenge[] = [];\n  writeups: Writeup[] = [];\n  votes: Vote[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private ctfService: CTFService,\n    private location: Location,\n    private userService: UserService,\n    private writeupService: WriteupService,\n    private voteService: VoteService,\n    private challengeService: ChallengeService\n  ) {}\n\n  ngOnInit() {\n    this.userService.getMe().subscribe((me) => {\n      this.me = me;\n    });\n\n    this.voteService.getVotes().subscribe((votes) => {\n      this.votes = votes || [];\n    });\n\n    this.route.params.subscribe((params) => {\n      if (params[\"id\"]) {\n        this.ctfService.getCTF(params[\"id\"]).subscribe((ctf) => {\n          this.ctf = ctf;\n\n          for (let category of this.ctf.categories) {\n            this.newCategoryChallenge[category] = { ctfID: this.ctf.id, category: category } as Challenge;\n          }\n        });\n\n        this.challengeService.getChallenges(params[\"id\"]).subscribe((challenges) => {\n          this.challenges = challenges;\n          this.newChallengeWriteupURL = {};\n          for (let challenge of this.challenges) {\n            this.newChallengeWriteupURL[challenge.id] = \"\";\n          }\n        });\n\n        this.writeupService.getWriteupsForCTF(params[\"id\"]).subscribe((writeups) => {\n          this.writeups = writeups || [];\n        });\n      } else {\n        this.ctf.submitterID = this.me.id;\n      }\n    });\n  }\n\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n\n  save() {\n    if (this.ctf.id) {\n      this.ctfService.updateCTF(this.ctf).subscribe(() => {\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    } else {\n      this.ctfService.newCTF(this.ctf).subscribe((ctf) => {\n        this.ctf = ctf;\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    }\n  }\n\n  removeCategory(category: string) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories = this.ctf.categories.filter((t) => t !== category);\n  }\n\n  addCategory(category: string) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories.push(category);\n    this.newCategory = \"\";\n    this.newCategoryChallenge[category] = { ctfID: this.ctf.id, category: category } as Challenge;\n    this.save();\n  }\n\n  saveChallenge(category: string) {\n    this.challengeService.newChallenge(this.newCategoryChallenge[category]).subscribe((challenge) => {\n      this.challenges.push(challenge);\n      this.newCategoryChallenge[category] = { ctfID: this.ctf.id, category: category } as Challenge;\n    });\n  }\n\n  updateChallenge(challenge: Challenge) {\n    this.challengeService.updateChallenge(challenge).subscribe(() => {\n      challenge.isEditMode = false;\n    });\n  }\n\n  deleteChallenge(challenge: Challenge) {\n    this.challengeService.deleteChallenge(challenge).subscribe(() => {\n      this.challenges = this.challenges.filter((c) => c.id !== challenge.id);\n    });\n  }\n\n  deleteWriteup(writeup: Writeup) {\n    this.writeupService.deleteWriteup(writeup).subscribe(() => {\n      this.writeups = this.writeups.filter((w) => w.id !== writeup.id);\n    });\n  }\n\n  filterChallenges(category: string): Challenge[] {\n    if (this.challenges == null) {\n      return [];\n    }\n    return this.challenges.filter((challenge) => challenge.category === category).sort((a, b) => b.solves - a.solves);\n  }\n\n  filterWriteups(challengeID: string): Writeup[] {\n    if (this.writeups == null) {\n      return [];\n    }\n\n    return this.writeups.filter((writeup) => writeup.challengeID === challengeID).sort((a, b) => b.voteCount - a.voteCount);\n  }\n\n  saveWriteup(challenge: Challenge, url: string) {\n    this.writeupService\n      .newWriteup({\n        challengeID: challenge.id,\n        challengeName: challenge.name,\n        challengeCategory: challenge.category,\n        ctfName: this.ctf.name,\n        url: url,\n        ctfID: this.ctf.id,\n        submitterID: this.me.id,\n      } as Writeup)\n      .subscribe((writeup) => {\n        this.writeups.push(writeup);\n        this.newChallengeWriteupURL[challenge.id] = \"\";\n      });\n  }\n\n  hasVoted(writeup: Writeup): boolean {\n    if (!this.votes) {\n    }\n    return !!this.votes.find((v) => v.writeupID === writeup.id);\n  }\n\n  getVote(writeup: Writeup): Vote | undefined {\n    return this.votes.find((v) => v.writeupID === writeup.id);\n  }\n\n  addVote(writeup: Writeup): void {\n    const vote: Vote = {\n      writeupID: writeup.id,\n      userID: this.me.id,\n    } as Vote;\n\n    this.voteService.newVote(vote).subscribe((v) => {\n      this.votes.push(v);\n      writeup.voteCount++;\n    });\n  }\n\n  removeVote(vote: Vote, writeup: Writeup): void {\n    console.log(\"remove vote\", vote);\n    this.voteService.deleteVote(vote).subscribe((_) => {\n      this.votes = this.votes.filter((v) => vote.id !== v.id);\n      writeup.voteCount--;\n    });\n  }\n\n  removeTag(challenge: Challenge, tag: string) {\n    challenge.tags = challenge.tags.filter((t: string) => t !== tag);\n    this.challengeService.updateChallenge(challenge).subscribe((c) => {\n      challenge = c;\n    });\n  }\n\n  addTag(challenge: Challenge, tag: string) {\n    if (!challenge.tags) {\n      challenge.tags = [];\n    }\n    challenge.tags.push(tag);\n    this.newTag = \"\";\n    this.challengeService.updateChallenge(challenge).subscribe((c) => {\n      challenge = c;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}