{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet CtfEditComponent = class CtfEditComponent {\n  constructor(route, ctfService, location, userService, writeupService) {\n    this.route = route;\n    this.ctfService = ctfService;\n    this.location = location;\n    this.userService = userService;\n    this.writeupService = writeupService;\n    this.ctf = {};\n    this.me = {};\n    this.newCategory = \"\";\n    this.newCategoryChallenge = {};\n    this.newCategoryWriteupURL = {};\n    this.challenges = [];\n    this.writeups = [];\n  }\n  ngOnInit() {\n    this.userService.getMe().subscribe(me => {\n      this.me = me;\n      this.route.params.subscribe(params => {\n        if (params[\"id\"]) {\n          this.ctfService.getCTF(params[\"id\"]).subscribe(ctf => {\n            this.ctf = ctf;\n            for (let category of this.ctf.categories) {\n              this.newCategoryChallenge[category] = {\n                ctfID: this.ctf.id,\n                category: category\n              };\n            }\n          });\n          this.ctfService.getChallenges(params[\"id\"]).subscribe(challenges => {\n            this.challenges = challenges;\n          });\n          this.writeupService.getWriteupsForCTF(params[\"id\"]).subscribe(writeups => {\n            this.writeups = writeups;\n          });\n        } else {\n          this.ctf.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n  save() {\n    if (this.ctf.id) {\n      this.ctfService.updateCTF(this.ctf).subscribe(() => {\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    } else {\n      this.ctfService.newCTF(this.ctf).subscribe(ctf => {\n        this.ctf = ctf;\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    }\n  }\n  removeCategory(category) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories = this.ctf.categories.filter(t => t !== category);\n  }\n  addCategory(category) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories.push(category);\n    this.newCategory = \"\";\n    this.newCategoryChallenge[category] = {\n      ctfID: this.ctf.id,\n      category: category\n    };\n  }\n  saveChallenge(category) {\n    this.ctfService.newChallenge(this.newCategoryChallenge[category]).subscribe(challenge => {\n      this.challenges.push(challenge);\n    });\n  }\n  deleteChallenge() {}\n  filterChallenges(category) {\n    return this.challenges.filter(challenge => challenge.category === category);\n  }\n  filterWriteups(category) {\n    return this.writeups.filter(writeup => writeup.challengeCategory === category);\n  }\n  saveWriteup(challenge, url) {\n    this.writeupService.newWriteup({\n      challengeID: challenge.id,\n      challengeName: challenge.name,\n      challengeCategory: challenge.category,\n      ctfName: this.ctf.name,\n      url: url,\n      ctfID: this.ctf.id,\n      submitterID: this.me.id\n    }).subscribe(writeup => {\n      this.writeups.push(writeup);\n    });\n  }\n};\nCtfEditComponent = __decorate([Component({\n  selector: \"app-ctf-edit\",\n  template: `<div class=\"container\" style=\"padding-top: 65px\">\n    <div class=\"mb-3\">\n      <label class=\"form-label\">CTF Name</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"ctf.name\" />\n    </div>\n\n    <input type=\"text\" class=\"form-control\" placeholder=\"Categories\" [(ngModel)]=\"newCategory\" />\n    <button class=\"btn btn-secondary\" (click)=\"addCategory(newCategory)\">Add Category</button>\n\n    <div *ngFor=\"let category of ctf.categories\" class=\"badge bg-secondary\">{{ category }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeCategory(category)\"></button></div>\n\n    <div *ngFor=\"let category of ctf.categories\">\n      <h3>{{ category }}</h3>\n      <table class=\"table\">\n        <tr>\n          <th>Challenge Name</th>\n          <th>Solves</th>\n          <th>Writeups</th>\n        </tr>\n\n        <tr *ngFor=\"let challenge of filterChallenges(category)\">\n          <td>{{ challenge.name }}</td>\n          <td>{{ challenge.solves }}</td>\n          <td>\n            <ul>\n              <li *ngFor=\"let writeup of filterWriteups(category)\">\n                <a href=\"{{ writeup.url }}\" target=\"_blank\">({{ writeup.votes | 0 }}) {{ writeup.url }}</a>\n              </li>\n            </ul>\n\n            <input type=\"text\" class=\"form-control\" placeholder=\"Writeup URL\" [(ngModel)]=\"newCategoryWriteupURL[category]\" />\n            <button class=\"btn btn-secondary btn-sm\" (click)=\"saveWriteup(challenge, newCategoryWriteupURL[category])\">Save Writeup</button>\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Challenge Name\" [(ngModel)]=\"newCategoryChallenge[category].name\" />\n          </td>\n          <td>\n            <input type=\"number\" class=\"form-control\" placeholder=\"Solves\" [(ngModel)]=\"newCategoryChallenge[category].solves\" />\n          </td>\n\n          <button (click)=\"saveChallenge(category)\">Save Challenge</button>\n        </tr>\n      </table>\n    </div>\n\n    <button (click)=\"save()\" class=\"btn btn-primary\">Save</button>\n\n    {{ ctf }}\n  </div>`,\n  styles: []\n})], CtfEditComponent);\nexport { CtfEditComponent };","map":{"version":3,"mappings":"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","names":["Component","CtfEditComponent","constructor","route","ctfService","location","userService","writeupService","ngOnInit","getMe","subscribe","me","params","getCTF","ctf","category","categories","newCategoryChallenge","ctfID","id","getChallenges","challenges","getWriteupsForCTF","writeups","submitterID","newCTF","go","save","updateCTF","removeCategory","filter","t","addCategory","push","newCategory","saveChallenge","newChallenge","challenge","deleteChallenge","filterChallenges","filterWriteups","writeup","challengeCategory","saveWriteup","url","newWriteup","challengeID","challengeName","name","ctfName","selector","template","styles"],"sourceRoot":"","sources":["/Users/c0nrad/Projects/ctfwriteups.org/fe/src/app/pages/ctf-edit/ctf-edit.component.ts"],"sourcesContent":["import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { CTF, CTFService, Challenge } from \"src/app/services/ctf.service\";\nimport { User, UserService } from \"src/app/services/user.service\";\nimport { Writeup, WriteupService } from \"src/app/services/writeup.service\";\n\n@Component({\n  selector: \"app-ctf-edit\",\n  template: `<div class=\"container\" style=\"padding-top: 65px\">\n    <div class=\"mb-3\">\n      <label class=\"form-label\">CTF Name</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"CTF Name\" [(ngModel)]=\"ctf.name\" />\n    </div>\n\n    <input type=\"text\" class=\"form-control\" placeholder=\"Categories\" [(ngModel)]=\"newCategory\" />\n    <button class=\"btn btn-secondary\" (click)=\"addCategory(newCategory)\">Add Category</button>\n\n    <div *ngFor=\"let category of ctf.categories\" class=\"badge bg-secondary\">{{ category }} <button tyle=\"button\" class=\"btn-close\" (click)=\"removeCategory(category)\"></button></div>\n\n    <div *ngFor=\"let category of ctf.categories\">\n      <h3>{{ category }}</h3>\n      <table class=\"table\">\n        <tr>\n          <th>Challenge Name</th>\n          <th>Solves</th>\n          <th>Writeups</th>\n        </tr>\n\n        <tr *ngFor=\"let challenge of filterChallenges(category)\">\n          <td>{{ challenge.name }}</td>\n          <td>{{ challenge.solves }}</td>\n          <td>\n            <ul>\n              <li *ngFor=\"let writeup of filterWriteups(category)\">\n                <a href=\"{{ writeup.url }}\" target=\"_blank\">({{ writeup.votes | 0 }}) {{ writeup.url }}</a>\n              </li>\n            </ul>\n\n            <input type=\"text\" class=\"form-control\" placeholder=\"Writeup URL\" [(ngModel)]=\"newCategoryWriteupURL[category]\" />\n            <button class=\"btn btn-secondary btn-sm\" (click)=\"saveWriteup(challenge, newCategoryWriteupURL[category])\">Save Writeup</button>\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Challenge Name\" [(ngModel)]=\"newCategoryChallenge[category].name\" />\n          </td>\n          <td>\n            <input type=\"number\" class=\"form-control\" placeholder=\"Solves\" [(ngModel)]=\"newCategoryChallenge[category].solves\" />\n          </td>\n\n          <button (click)=\"saveChallenge(category)\">Save Challenge</button>\n        </tr>\n      </table>\n    </div>\n\n    <button (click)=\"save()\" class=\"btn btn-primary\">Save</button>\n\n    {{ ctf }}\n  </div>`,\n  styles: [],\n})\nexport class CtfEditComponent {\n  ctf: CTF = {} as CTF;\n  me: User = {} as User;\n  newCategory = \"\";\n  newCategoryChallenge: { [key: string]: Challenge } = {};\n  newCategoryWriteupURL: { [key: string]: string } = {};\n\n  challenges: Challenge[] = [];\n  writeups: Writeup[] = [];\n\n  constructor(private route: ActivatedRoute, private ctfService: CTFService, private location: Location, private userService: UserService, private writeupService: WriteupService) {}\n\n  ngOnInit() {\n    this.userService.getMe().subscribe((me) => {\n      this.me = me;\n\n      this.route.params.subscribe((params) => {\n        if (params[\"id\"]) {\n          this.ctfService.getCTF(params[\"id\"]).subscribe((ctf) => {\n            this.ctf = ctf;\n\n            for (let category of this.ctf.categories) {\n              this.newCategoryChallenge[category] = { ctfID: this.ctf.id, category: category } as Challenge;\n            }\n          });\n\n          this.ctfService.getChallenges(params[\"id\"]).subscribe((challenges) => {\n            this.challenges = challenges;\n          });\n\n          this.writeupService.getWriteupsForCTF(params[\"id\"]).subscribe((writeups) => {\n            this.writeups = writeups;\n          });\n        } else {\n          this.ctf.submitterID = this.me.id;\n        }\n      });\n    });\n  }\n\n  newCTF() {\n    this.location.go(\"/ctfs/new\");\n  }\n\n  save() {\n    if (this.ctf.id) {\n      this.ctfService.updateCTF(this.ctf).subscribe(() => {\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    } else {\n      this.ctfService.newCTF(this.ctf).subscribe((ctf) => {\n        this.ctf = ctf;\n        this.location.go(`/ctfs/${this.ctf.id}/edit`);\n      });\n    }\n  }\n\n  removeCategory(category: string) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories = this.ctf.categories.filter((t) => t !== category);\n  }\n\n  addCategory(category: string) {\n    if (!this.ctf.categories) {\n      this.ctf.categories = [];\n    }\n    this.ctf.categories.push(category);\n    this.newCategory = \"\";\n    this.newCategoryChallenge[category] = { ctfID: this.ctf.id, category: category } as Challenge;\n  }\n\n  saveChallenge(category: string) {\n    this.ctfService.newChallenge(this.newCategoryChallenge[category]).subscribe((challenge) => {\n      this.challenges.push(challenge);\n    });\n  }\n\n  deleteChallenge() {}\n\n  filterChallenges(category: string): Challenge[] {\n    return this.challenges.filter((challenge) => challenge.category === category);\n  }\n\n  filterWriteups(category: string): Writeup[] {\n    return this.writeups.filter((writeup) => writeup.challengeCategory === category);\n  }\n\n  saveWriteup(challenge: Challenge, url: string) {\n    this.writeupService\n      .newWriteup({\n        challengeID: challenge.id,\n        challengeName: challenge.name,\n        challengeCategory: challenge.category,\n        ctfName: this.ctf.name,\n        url: url,\n        ctfID: this.ctf.id,\n        submitterID: this.me.id,\n      } as Writeup)\n      .subscribe((writeup) => {\n        this.writeups.push(writeup);\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}